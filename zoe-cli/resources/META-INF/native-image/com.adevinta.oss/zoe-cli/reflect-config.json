[
{
  "name":"com.adevinta.oss.zoe.cli.config.AwsCredentialsConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.AwsCredentialsConfig$Default",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.AwsCredentialsConfig$Profile",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.AwsCredentialsConfig$Static"
},
{
  "name":"com.adevinta.oss.zoe.cli.config.ClusterConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.DockerImageConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.EnvConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.KubernetesRunnerConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.LambdaDeployConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.LambdaRunnerConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.LocalRunnerConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.RunnerName",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.RunnersConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.RunnersSection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.SecretsProviderConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.SecretsProviderConfig$EnvVars"
},
{
  "name":"com.adevinta.oss.zoe.cli.config.SecretsProviderConfig$Strongbox",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.StorageConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.cli.config.StorageConfig$AwsFs"
},
{
  "name":"com.adevinta.oss.zoe.cli.config.StorageConfig$LocalFs"
},
{
  "name":"com.adevinta.oss.zoe.cli.config.TopicConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.DejsonifierConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.DejsonifierConfig$Avro",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.DejsonifierConfig$Raw"
},
{
  "name":"com.adevinta.oss.zoe.core.functions.OffsetQueriesRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.OffsetQueriesResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.OffsetQuery",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.OffsetQuery$Beginning"
},
{
  "name":"com.adevinta.oss.zoe.core.functions.OffsetQuery$End",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.OffsetQuery$Timestamp",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.PartitionProgress",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.PollConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.PollResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.PolledRecord",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.ProduceConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.ProduceResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.ProducedRecord",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.Progress",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.SkippedRecord",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.Subscription",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.Subscription$AssignPartitions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.core.functions.Subscription$WithGroupId"
},
{
  "name":"com.adevinta.oss.zoe.core.functions.TopicPartitionOffset",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.service.runners.LambdaZoeRunner"
},
{
  "name":"com.adevinta.oss.zoe.service.runners.LambdaZoeRunner$LambdaExecutionError",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.service.secrets.SecretsProviderWithCache"
},
{
  "name":"com.adevinta.oss.zoe.service.secrets.SecretsProviderWithCache$CachedSecrets",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.adevinta.oss.zoe.service.secrets.SecretsProviderWithCache$CachedValue",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.auth.AWS4Signer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.internal.config.Builder",
  "allDeclaredMethods":true
},
{
  "name":"com.amazonaws.internal.config.HostRegexToRegionMappingJsonHelper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.internal.config.HostRegexToRegionMappingJsonHelper[]"
},
{
  "name":"com.amazonaws.internal.config.HttpClientConfigJsonHelper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.internal.config.InternalConfigJsonHelper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.internal.config.JsonIndex",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.internal.config.JsonIndex[]"
},
{
  "name":"com.amazonaws.internal.config.SignerConfigJsonHelper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.jmx.SdkMBeanRegistrySupport",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.partitions.model.CredentialScope",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.partitions.model.Endpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.partitions.model.Partition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.partitions.model.Partitions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.partitions.model.Region",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.partitions.model.Service",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.amazonaws.services.s3.internal.AWSS3V4Signer"
},
{
  "name":"com.fasterxml.jackson.databind.JsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.deser.Deserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ser.Serializers[]"
},
{
  "name":"com.jcraft.jsch.DHEC256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.DHEC384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.DHEC521",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.DHG14",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.UserAuthNone",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.UserAuthPublicKey",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.AES128CBC",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.AES128CTR",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.AES192CBC",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.AES192CTR",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.AES256CBC",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.AES256CTR",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.DH",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.ECDHN",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.HMACSHA1",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.Random",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.SHA1",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.SignatureECDSA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.SignatureECDSA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.SignatureECDSA521",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.SignatureRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.jcraft.jsch.jce.TripleDESCTR",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.schibsted.security.strongbox.sdk.types.RawSecretEntry",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.Schema",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.SchemaTypeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.requests.RegisterSchemaRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.requests.RegisterSchemaResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.confluent.kafka.serializers.KafkaAvroSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.serializers.subject.TopicNameStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.serializers.subject.TopicRecordNameStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.fabric8.kubernetes.api.model.AWSElasticBlockStoreVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Affinity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.AuthInfo",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.AuthProviderConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.AzureDiskVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.AzureFileVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.CSIVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Capabilities",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.CephFSVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.CinderVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Cluster",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Config",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ConfigMapEnvSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ConfigMapKeySelector",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ConfigMapProjection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ConfigMapVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Container",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ContainerPort",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ContainerState",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ContainerStateRunning",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ContainerStateTerminated",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ContainerStateWaiting",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ContainerStatus",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Context",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.DeleteOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.DownwardAPIProjection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.DownwardAPIVolumeFile",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.DownwardAPIVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.EmptyDirVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.EnvFromSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.EnvVar",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.EnvVarSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.EphemeralContainer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ExecAction",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ExecConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ExecEnvVar",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.FCVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.FieldsV1",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.FlexVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.FlockerVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.GCEPersistentDiskVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.GitRepoVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.GlusterfsVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.HTTPGetAction",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.HTTPHeader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Handler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.HasMetadata",
  "allDeclaredMethods":true
},
{
  "name":"io.fabric8.kubernetes.api.model.HostAlias",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.HostPathVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ISCSIVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.IntOrString$Deserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.fabric8.kubernetes.api.model.KeyToPath",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.KubernetesResource",
  "allDeclaredMethods":true
},
{
  "name":"io.fabric8.kubernetes.api.model.LabelSelector",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.LabelSelectorRequirement",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Lifecycle",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.LocalObjectReference",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ManagedFieldsEntry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NFSVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NamedAuthInfo",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NamedCluster",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NamedContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NamedExtension",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NodeAffinity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NodeSelector",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NodeSelectorRequirement",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.NodeSelectorTerm",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ObjectFieldSelector",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ObjectMeta",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.OwnerReference",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PersistentVolumeClaimVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PhotonPersistentDiskVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Pod",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodAffinity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodAffinityTerm",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodAntiAffinity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodCondition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodDNSConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodDNSConfigOption",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodIP",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodReadinessGate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodSecurityContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodSpec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PodStatus",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PortworxVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Preferences",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.PreferredSchedulingTerm",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Probe",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ProjectedVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Quantity$Deserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.fabric8.kubernetes.api.model.Quantity$Serializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.fabric8.kubernetes.api.model.QuobyteVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.RBDVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ResourceFieldSelector",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ResourceRequirements",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.SELinuxOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ScaleIOVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.SecretEnvSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.SecretKeySelector",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.SecretProjection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.SecretVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.SecurityContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.ServiceAccountTokenProjection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.StorageOSVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Sysctl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.TCPSocketAction",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Toleration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.TopologySpreadConstraint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.Volume",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.VolumeDevice",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.VolumeMount",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.VolumeProjection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.VsphereVirtualDiskVolumeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.WatchEvent",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.WeightedPodAffinityTerm",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.api.model.WindowsSecurityContextOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.fabric8.kubernetes.internal.KubernetesDeserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.io.ObjectInputStream"
},
{
  "name":"java.io.Serializable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Class"
},
{
  "name":"java.lang.Class[]"
},
{
  "name":"java.lang.Comparable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Enum",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Integer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Iterable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Long",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Object"
},
{
  "name":"java.lang.Object[][]"
},
{
  "name":"java.lang.String"
},
{
  "name":"java.lang.Thread",
  "methods":[{"name":"getContextClassLoader","parameterTypes":[] }]
},
{
  "name":"java.lang.Throwable",
  "methods":[{"name":"addSuppressed","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[{"name":"getParameters","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[{"name":"getName","parameterTypes":[] }]
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.text.DateFormatSymbols",
  "methods":[{"name":"getInstance","parameterTypes":["java.util.Locale"] }]
},
{
  "name":"java.util.Collection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.util.Comparator"
},
{
  "name":"java.util.HashSet",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Iterator"
},
{
  "name":"java.util.List",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Map",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.RandomAccess",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.util.Spliterator"
},
{
  "name":"java.util.Spliterator[]"
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor",
  "methods":[{"name":"setRemoveOnCancelPolicy","parameterTypes":["boolean"] }]
},
{
  "name":"java.util.function.Consumer"
},
{
  "name":"java.util.function.Consumer[]"
},
{
  "name":"java.util.function.IntFunction"
},
{
  "name":"java.util.function.IntFunction[]"
},
{
  "name":"java.util.function.Predicate"
},
{
  "name":"java.util.function.UnaryOperator"
},
{
  "name":"java.util.stream.Stream"
},
{
  "name":"java.util.stream.Stream[]"
},
{
  "name":"java.util.zip.CRC32C"
},
{
  "name":"javax.net.ssl.SSLParameters",
  "methods":[{"name":"setApplicationProtocols","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"javax.net.ssl.SSLSocket",
  "methods":[{"name":"getApplicationProtocol","parameterTypes":[] }]
},
{
  "name":"javax.xml.bind.DatatypeConverter"
},
{
  "name":"kotlin.KotlinVersion",
  "fields":[{"name":"CURRENT"}]
},
{
  "name":"kotlin.Metadata",
  "allDeclaredMethods":true
},
{
  "name":"kotlin.Unit"
},
{
  "name":"kotlin.collections.EmptyList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"kotlin.jvm.internal.DefaultConstructorMarker"
},
{
  "name":"kotlin.jvm.internal.markers.KMappedMarker",
  "allDeclaredMethods":true
},
{
  "name":"kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
  "allPublicFields":true
},
{
  "name":"org.apache.commons.logging.LogFactory"
},
{
  "name":"org.apache.commons.logging.impl.Log4JLogger",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.commons.logging.impl.LogFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.logging.impl.WeakHashtable",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.http.client.config.RequestConfig$Builder",
  "methods":[{"name":"setNormalizeUri","parameterTypes":["boolean"] }]
},
{
  "name":"org.apache.kafka.clients.producer.internals.DefaultPartitioner",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.serialization.StringSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.log4j.Appender"
},
{
  "name":"org.apache.log4j.Category"
},
{
  "name":"org.apache.log4j.CategoryKey"
},
{
  "name":"org.apache.log4j.ConsoleAppender",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.log4j.Layout"
},
{
  "name":"org.apache.log4j.Level",
  "fields":[{"name":"TRACE"}]
},
{
  "name":"org.apache.log4j.Logger"
},
{
  "name":"org.apache.log4j.PatternLayout",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.log4j.Priority"
},
{
  "name":"org.apache.log4j.helpers.Loader"
},
{
  "name":"org.apache.log4j.spi.OptionHandler"
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jce.provider.BouncyCastleProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jgit.internal.JGitText",
  "allPublicFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jgit.lib.CoreConfig$AutoCRLF",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jgit.lib.CoreConfig$CheckStat",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jgit.lib.CoreConfig$EOL",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jgit.lib.CoreConfig$HideDotFiles",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jgit.lib.CoreConfig$LogRefUpdates",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.eclipse.jgit.lib.CoreConfig$SymLinks",
  "methods":[{"name":"values","parameterTypes":[] }]
}
]
