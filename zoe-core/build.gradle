plugins {
    id 'com.google.cloud.tools.jib'
}

dependencies {
    implementation(
            'com.amazonaws:aws-lambda-java-core:1.1.0',
    )

    implementation(
            'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7',
            "org.jetbrains.kotlin:kotlin-reflect",
            'io.confluent:kafka-avro-serializer:5.2.2'
    )

    implementation(
            'org.slf4j:slf4j-log4j12:1.7.26',
            'log4j:log4j:1.2.17',
            'org.apache.kafka:kafka-clients:2.3.1',
            'org.apache.avro:avro-compiler:1.8.2',
            'com.google.guava:guava:28.0-jre',
    )

    compile(group: 'io.burt', name: 'jmespath-jackson', version: '0.2.0')

    testCompile group: 'junit', name: 'junit', version: '4.12'

    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.8"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.8"

    // spek requires kotlin-reflect, can be omitted if already in the classpath
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect"
}

// setup the test task
test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main.kotlin.srcDirs = ['src']
    main.resources.srcDirs = ['resources']
    test.kotlin.srcDirs = ['test']
    test.resources.srcDirs = ['testresources']
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.adevinta.oss'
            artifactId = 'zoe-core'
            version = '1.1'

            from components.java
        }
    }
}

jib {
    to {
        image = 'wlezzar/zoe-core'
        tags = ['1.1', 'latest']
    }
    container {
        jvmFlags = ['-Xms512m', '-client']
        mainClass = 'com.adevinta.oss.zoe.core.MainKt'
    }
}