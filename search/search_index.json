{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Zoe : The Kafka companion Zoe is a command line tool to interact with kafka in an easy and intuitive way. Wanna see this in action ? check out this demo... Zoe really shines when it comes to interacting with cloud hosted kafka clusters (kubernetes, AWS, etc.) due to its ability to offload consumption and execution to kubernetes pods or lambda functions (more runners will be supported in the future). Status Zoe has been open sourced very recently and is not GA yet. It is actively being improved towards stabilization. Documentation is also in progress. That said, we are already using it at Adevinta and you can already start trying it if you are not afraid of digging into the code to solve some eventual undocumented problems :) . Key features Here are some of the most interesting features of zoe : Consume kafka topics from a specific point in time (ex. using --from 'PT5h from the last 5 hours). Filter data based on content (ex. using --filter \"id == '12345'\" filters records with the selected id). Supports offloading consumption of data to multiple lambda functions, kubernetes pods, etc. for parallelism (ex. adding -x kubernetes would offload all the requests to a configured kubernetes cluster). Monitor consumer groups' offsets. Upload avro schemas from a .avsc or .avdl file using different naming strategies. ... and more. Go to the install section for instructions on how to install the zoe CLI.","title":"Zoe : The Kafka companion"},{"location":"#zoe-the-kafka-companion","text":"Zoe is a command line tool to interact with kafka in an easy and intuitive way. Wanna see this in action ? check out this demo... Zoe really shines when it comes to interacting with cloud hosted kafka clusters (kubernetes, AWS, etc.) due to its ability to offload consumption and execution to kubernetes pods or lambda functions (more runners will be supported in the future).","title":"Zoe : The Kafka companion"},{"location":"#status","text":"Zoe has been open sourced very recently and is not GA yet. It is actively being improved towards stabilization. Documentation is also in progress. That said, we are already using it at Adevinta and you can already start trying it if you are not afraid of digging into the code to solve some eventual undocumented problems :) .","title":"Status"},{"location":"#key-features","text":"Here are some of the most interesting features of zoe : Consume kafka topics from a specific point in time (ex. using --from 'PT5h from the last 5 hours). Filter data based on content (ex. using --filter \"id == '12345'\" filters records with the selected id). Supports offloading consumption of data to multiple lambda functions, kubernetes pods, etc. for parallelism (ex. adding -x kubernetes would offload all the requests to a configured kubernetes cluster). Monitor consumer groups' offsets. Upload avro schemas from a .avsc or .avdl file using different naming strategies. ... and more. Go to the install section for instructions on how to install the zoe CLI.","title":"Key features"},{"location":"tutorials/","text":"Tutorials The zoe repository provides a bunch of Hands-on tutorials that walks you through the most useful concepts of zoe. These tutorials are self contained and do not require extra infrastructure other than you own machine. A simple example : This tutorial walks you through the most basic functionalities of zoe. It makes use of a dataset downloaded from the Cat Facts API to explore reading and writing data from / into kafka using zoe. Zoe with Avro : This tutorial shows zoe support for avro and the schema registry. If you are new to zoe, start with the simple example above. Zoe with Kubernetes : This tutorial shows you how you can offload consumption and interactions to kubernetes pods for parallelism.","title":"Tutorials"},{"location":"tutorials/#tutorials","text":"The zoe repository provides a bunch of Hands-on tutorials that walks you through the most useful concepts of zoe. These tutorials are self contained and do not require extra infrastructure other than you own machine. A simple example : This tutorial walks you through the most basic functionalities of zoe. It makes use of a dataset downloaded from the Cat Facts API to explore reading and writing data from / into kafka using zoe. Zoe with Avro : This tutorial shows zoe support for avro and the schema registry. If you are new to zoe, start with the simple example above. Zoe with Kubernetes : This tutorial shows you how you can offload consumption and interactions to kubernetes pods for parallelism.","title":"Tutorials"},{"location":"install/","text":"Install Zoe CLI There are different ways to install zoe depending on your needs and the platform you are using : Platform package install : Self contained platform packages ( .deb , .rpm , etc.) that ships zoe with its own version of the java virtual machine. This doesn't require that host machine to have its own JDK. This is the easiest and the recommended way to install zoe (if your platform is supported). Manual tarball install : Supports all platforms. However, this requires the host machine to have a JDK 11 or higher. Docker : You can also use zoe using docker. We provide built-in image on each release.","title":"Install zoe"},{"location":"install/#install-zoe-cli","text":"There are different ways to install zoe depending on your needs and the platform you are using : Platform package install : Self contained platform packages ( .deb , .rpm , etc.) that ships zoe with its own version of the java virtual machine. This doesn't require that host machine to have its own JDK. This is the easiest and the recommended way to install zoe (if your platform is supported). Manual tarball install : Supports all platforms. However, this requires the host machine to have a JDK 11 or higher. Docker : You can also use zoe using docker. We provide built-in image on each release.","title":"Install Zoe CLI"},{"location":"install/docker/","text":"Using zoe with Docker Available soon...","title":"Docker"},{"location":"install/docker/#using-zoe-with-docker","text":"Available soon...","title":"Using zoe with Docker"},{"location":"install/package/","text":"Platform package install (recommended) You can install zoe using one of the platform packages listed below. Only few platforms are supported for now but more will come in the future. The platform packages are self contained. They ship with their own version of the java virtual machine (thus the higher size of the package). The host machine does not need to have it's own java runtime. The platform packages are built with jpackage and JDK 14. Ubuntu / Debian Download the .deb package of the zoe CLI from the latest release page and install it using dpkg : ZOE_VERSION=0.3.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe_${ZOE_VERSION}-1_amd64.deb\" -o /tmp/zoe.deb sudo dpkg -i /tmp/zoe.deb Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin Init zoe configuration : bash zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe. Centos Download the .rpm package of the zoe CLI from the latest release page and install it using dpkg : ZOE_VERSION=0.3.0 # change it to the suitable version sudo rpm -i \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe-${ZOE_VERSION}-1.x86_64.rpm\" Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin 3. Init zoe configuration : bash zoe config init 4. You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Platform packages"},{"location":"install/package/#platform-package-install-recommended","text":"You can install zoe using one of the platform packages listed below. Only few platforms are supported for now but more will come in the future. The platform packages are self contained. They ship with their own version of the java virtual machine (thus the higher size of the package). The host machine does not need to have it's own java runtime. The platform packages are built with jpackage and JDK 14.","title":"Platform package install (recommended)"},{"location":"install/package/#ubuntu-debian","text":"Download the .deb package of the zoe CLI from the latest release page and install it using dpkg : ZOE_VERSION=0.3.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe_${ZOE_VERSION}-1_amd64.deb\" -o /tmp/zoe.deb sudo dpkg -i /tmp/zoe.deb Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin Init zoe configuration : bash zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Ubuntu / Debian"},{"location":"install/package/#centos","text":"Download the .rpm package of the zoe CLI from the latest release page and install it using dpkg : ZOE_VERSION=0.3.0 # change it to the suitable version sudo rpm -i \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe-${ZOE_VERSION}-1.x86_64.rpm\" Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin 3. Init zoe configuration : bash zoe config init 4. You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Centos"},{"location":"install/tarball/","text":"Manual tarball install (requires a JDK on the host machine) Java 11 or higher is required in order to install the runtime-less tarball packages. They only ship with the Zoe CLI jar. If you don't have java installed already, you can use sdkman for an easy install and version management of the JDK. If you don't want to install java you can try one of the platform packages provided above. Once java is installed, proceed with the following steps : Download the runtime-less zip or tar package of the zoe CLI from the latest release page and uncompress it into your home directory (or wherever you wish) ZOE_VERSION=0.3.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe-${ZOE_VERSION}.tar.gz\" | tar -zx -C $HOME Add the $HOME/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:$HOME/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Tarball install"},{"location":"install/tarball/#manual-tarball-install-requires-a-jdk-on-the-host-machine","text":"Java 11 or higher is required in order to install the runtime-less tarball packages. They only ship with the Zoe CLI jar. If you don't have java installed already, you can use sdkman for an easy install and version management of the JDK. If you don't want to install java you can try one of the platform packages provided above. Once java is installed, proceed with the following steps : Download the runtime-less zip or tar package of the zoe CLI from the latest release page and uncompress it into your home directory (or wherever you wish) ZOE_VERSION=0.3.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe-${ZOE_VERSION}.tar.gz\" | tar -zx -C $HOME Add the $HOME/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:$HOME/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Manual tarball install (requires a JDK on the host machine)"}]}