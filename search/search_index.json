{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Zoe - The Kafka Companion Zoe is a command line tool to interact with kafka in an easy and intuitive way. Wanna see this in action ? check out this demo... Zoe really shines when it comes to interacting with cloud hosted kafka clusters (kubernetes, AWS, etc.) due to its ability to offload consumption and execution to kubernetes pods or lambda functions (more runners will be supported in the future). Key features Here are some of the most interesting features of zoe : Supports offloading consumption of data to lambda functions, kubernetes pods, etc. for parallelism (ex. adding -r kubernetes would offload all the requests to multiple pods in a configured kubernetes cluster). Consume kafka topics from a specific point in time (ex. using --from 'PT5h from the last 5 hours). Filter data based on content (ex. using --filter \"id == '12345'\" filters records with the selected id). Monitor consumer groups' offsets. Upload avro schemas from a .avsc or .avdl file using different naming strategies. ... and more. Go to the install section for instructions on how to install the zoe CLI. Sample commands Read 10 records from the input topic from the local kafka cluster (aliases for topics and clusters are set in the configuration) : command zoe --cluster local topics consume -n 10 output { \"_id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 6 , \"userUpvoted\" : null } { \"_id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 5 , \"userUpvoted\" : null } { \"_id\" : \"591d9b2f227c1a0020d26823\" , \"text\" : \"Every year, nearly four million cats are eaten in ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"59951d5ef2db18002031693c\" , \"text\" : \"America\u2019s cats, including housecats that adventure...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"5a4d76916ef087002174c28b\" , \"text\" : \"A cat\u2019s nose pad is ridged with a unique pattern, ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } Read the 10 records starting from the last 6 hours and format the output data as a table : command zoe --cluster local \\ --output table topics consume \\ -n 10 \\ --from 'PT6h' output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 599f89639a11040c4a163440 \u2502 Here is a video of some cats in zero gravity. yout... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 5 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 591d9b2f227c1a0020d26823 \u2502 Every year, nearly four million cats are eaten in ... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b3bd7d24cf4e10014bfd199 \u2502 The myth that a cat has nine lives comes from thei... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 3 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b453e380fd3a600147f32f3 \u2502 Exposure to UV light with hairless or partially-ha... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 3 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 590b9d90229d260020af0b06 \u2502 Evidence suggests domesticated cats have been arou... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Filter only records that belong to Kasimir : command zoe --cluster local \\ --output table \\ topics consume \\ -n 10 \\ --from 'PT6h' \\ --filter \"user.name.first == 'Kasimir'\" output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e009390aac31001185ed10 \u2502 Most cats are lactose intolerant, and milk can cau... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e007cc0aac31001185ecf5 \u2502 Cats are the most popular pet in the United States... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008c50aac31001185ed0e \u2502 The world's richest cat is worth $13 million after... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e009790aac31001185ed14 \u2502 The technical term for \"hairball\" is \"bezoar.\" \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Do the same search as before but against my production kafka cluster and by offloading the consumption to kubernetes and spinning up 10 pods in parallel : command zoe --cluster my-production-kafka \\ --output table \\ --runner kubernetes \\ topics consume \\ -n 10 \\ --from 'PT6h' \\ --filter \"user.name.first == 'Kasimir'\" \\ --jobs 10 Display the offsets of my consumer group my-group : command zoe -o table -v -c my-cluster groups offsets my-consumer-group-name output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 topic \u2502 partition \u2502 currentOffset \u2502 endOffset \u2502 lag \u2502 metadata \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 3 \u2502 49993793 \u2502 49993793 \u2502 0 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 4 \u2502 50275990 \u2502 50275991 \u2502 1 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 1 \u2502 50155761 \u2502 50155762 \u2502 1 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 2 \u2502 50212574 \u2502 50212574 \u2502 0 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 0 \u2502 50027346 \u2502 50027347 \u2502 1 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Status Zoe has been open sourced very recently and is not GA yet. It is actively being improved towards stabilization. Documentation is also in progress. That said, we are already using it at Adevinta and you can already start trying it if you are not afraid of digging into the code to solve some eventual undocumented problems :) . Maintainers Created by: Walid Lezzar ( Github , Twitter , LinkedIn ) Contributors Contributor's guide coming soon.","title":"Overview"},{"location":"#zoe-the-kafka-companion","text":"Zoe is a command line tool to interact with kafka in an easy and intuitive way. Wanna see this in action ? check out this demo... Zoe really shines when it comes to interacting with cloud hosted kafka clusters (kubernetes, AWS, etc.) due to its ability to offload consumption and execution to kubernetes pods or lambda functions (more runners will be supported in the future).","title":"Zoe - The Kafka Companion"},{"location":"#key-features","text":"Here are some of the most interesting features of zoe : Supports offloading consumption of data to lambda functions, kubernetes pods, etc. for parallelism (ex. adding -r kubernetes would offload all the requests to multiple pods in a configured kubernetes cluster). Consume kafka topics from a specific point in time (ex. using --from 'PT5h from the last 5 hours). Filter data based on content (ex. using --filter \"id == '12345'\" filters records with the selected id). Monitor consumer groups' offsets. Upload avro schemas from a .avsc or .avdl file using different naming strategies. ... and more. Go to the install section for instructions on how to install the zoe CLI.","title":"Key features"},{"location":"#sample-commands","text":"Read 10 records from the input topic from the local kafka cluster (aliases for topics and clusters are set in the configuration) : command zoe --cluster local topics consume -n 10 output { \"_id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 6 , \"userUpvoted\" : null } { \"_id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 5 , \"userUpvoted\" : null } { \"_id\" : \"591d9b2f227c1a0020d26823\" , \"text\" : \"Every year, nearly four million cats are eaten in ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"59951d5ef2db18002031693c\" , \"text\" : \"America\u2019s cats, including housecats that adventure...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"5a4d76916ef087002174c28b\" , \"text\" : \"A cat\u2019s nose pad is ridged with a unique pattern, ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } Read the 10 records starting from the last 6 hours and format the output data as a table : command zoe --cluster local \\ --output table topics consume \\ -n 10 \\ --from 'PT6h' output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 599f89639a11040c4a163440 \u2502 Here is a video of some cats in zero gravity. yout... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 5 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 591d9b2f227c1a0020d26823 \u2502 Every year, nearly four million cats are eaten in ... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b3bd7d24cf4e10014bfd199 \u2502 The myth that a cat has nine lives comes from thei... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 3 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b453e380fd3a600147f32f3 \u2502 Exposure to UV light with hairless or partially-ha... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 3 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 590b9d90229d260020af0b06 \u2502 Evidence suggests domesticated cats have been arou... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Filter only records that belong to Kasimir : command zoe --cluster local \\ --output table \\ topics consume \\ -n 10 \\ --from 'PT6h' \\ --filter \"user.name.first == 'Kasimir'\" output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e009390aac31001185ed10 \u2502 Most cats are lactose intolerant, and milk can cau... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e007cc0aac31001185ecf5 \u2502 Cats are the most popular pet in the United States... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008c50aac31001185ed0e \u2502 The world's richest cat is worth $13 million after... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e009790aac31001185ed14 \u2502 The technical term for \"hairball\" is \"bezoar.\" \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Do the same search as before but against my production kafka cluster and by offloading the consumption to kubernetes and spinning up 10 pods in parallel : command zoe --cluster my-production-kafka \\ --output table \\ --runner kubernetes \\ topics consume \\ -n 10 \\ --from 'PT6h' \\ --filter \"user.name.first == 'Kasimir'\" \\ --jobs 10 Display the offsets of my consumer group my-group : command zoe -o table -v -c my-cluster groups offsets my-consumer-group-name output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 topic \u2502 partition \u2502 currentOffset \u2502 endOffset \u2502 lag \u2502 metadata \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 3 \u2502 49993793 \u2502 49993793 \u2502 0 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 4 \u2502 50275990 \u2502 50275991 \u2502 1 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 1 \u2502 50155761 \u2502 50155762 \u2502 1 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 2 \u2502 50212574 \u2502 50212574 \u2502 0 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 0 \u2502 50027346 \u2502 50027347 \u2502 1 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Sample commands"},{"location":"#status","text":"Zoe has been open sourced very recently and is not GA yet. It is actively being improved towards stabilization. Documentation is also in progress. That said, we are already using it at Adevinta and you can already start trying it if you are not afraid of digging into the code to solve some eventual undocumented problems :) .","title":"Status"},{"location":"#maintainers","text":"Created by: Walid Lezzar ( Github , Twitter , LinkedIn )","title":"Maintainers"},{"location":"#contributors","text":"Contributor's guide coming soon.","title":"Contributors"},{"location":"advanced/avro/","text":"Using avro and the schema registry Zoe has good support for Avro and the schema registry. It makes it easy to consume and display avro data nicely as normal json objects or as a table ( --output table ). It is also easy to produce Avro data from json files as an input. Consuming Avro data In order to consume avro data from Kafka, it is enough to set the necessary deserializers properties in the props section of the cluster config : clusters : my-cluster : props : bootstrap.servers : my-cluster.example.com:9094 key.deserializer : org.apache.kafka.common.serialization.StringDeserializer value.deserializer : io.confluent.kafka.serializers.KafkaAvroDeserializer schema.registry.url : https://kafka-dampbar-registry-internal.storage.mpi-internal.com Then, it's possible to consume avro data using the following command : zoe -v -c my-cluster topics consume input -n 10 With the above command : Zoe consumes data from the input topic and deserializes it using the key.deserializer and value.deserializer . It transforms the data into json (to be able to apply eventual filters) Producing Avro data To produce Avro data from a json input using the produce command, it is necessary to set : The registry property that points to the schema registry instance. Zoe uses this property to fetch the avro schema needed to transform the json data into avro. The required serializer properties of the producer in the props section of the cluster config. In addition, you need to set the subject name of the topic in the topic's configuration. A good enough configuration for producing avro data may look like the following : clusters : my-cluster : props : bootstrap.servers : my-cluster.example.com:9094 key.serializer : org.apache.kafka.common.serialization.StringSerializer value.serializer : io.confluent.kafka.serializers.KafkaAvroSerializer value.subject.name.strategy : io.confluent.kafka.serializers.subject.TopicRecordNameStrategy registry : https://my-registry.example.com topics : my-topic : name : long-topic-name subject : long-topic-name-com.adevinta.schemas.v1.Example With the configuration above, you can execute the following command : zoe -v --cluster my-cluster \\ topics produce \\ --from-file data.json \\ --topic my-topic \\ --key-path 'id' The command above would do the following : It fetches the avro schema registered under the subject name long-topic-name-com.adevinta.schemas.v1.Example in the schema registry instance pointed at by the registry property in the configuration. It uses the schema to transform the json data in data.json into avro GenericRecord instances. Writes the generic records into long-name-topic (aliased by my-topic ). Interacting with the registry You can also interact with the schema registry using the zoe schemas command. Here is a non exhaustive list of what you can do : List avro schemas registered into the registry Describe a specific Avro schema Deploy an avro schema into the registry from an .avsc or .avdl file. Where to go from here There is a hands on tutorial on using zoe with avro at : guides/avro . Learn more about interacting with the registry with : zoe schemas --help","title":"Using avro and schema registry"},{"location":"advanced/avro/#using-avro-and-the-schema-registry","text":"Zoe has good support for Avro and the schema registry. It makes it easy to consume and display avro data nicely as normal json objects or as a table ( --output table ). It is also easy to produce Avro data from json files as an input.","title":"Using avro and the schema registry"},{"location":"advanced/avro/#consuming-avro-data","text":"In order to consume avro data from Kafka, it is enough to set the necessary deserializers properties in the props section of the cluster config : clusters : my-cluster : props : bootstrap.servers : my-cluster.example.com:9094 key.deserializer : org.apache.kafka.common.serialization.StringDeserializer value.deserializer : io.confluent.kafka.serializers.KafkaAvroDeserializer schema.registry.url : https://kafka-dampbar-registry-internal.storage.mpi-internal.com Then, it's possible to consume avro data using the following command : zoe -v -c my-cluster topics consume input -n 10 With the above command : Zoe consumes data from the input topic and deserializes it using the key.deserializer and value.deserializer . It transforms the data into json (to be able to apply eventual filters)","title":"Consuming Avro data"},{"location":"advanced/avro/#producing-avro-data","text":"To produce Avro data from a json input using the produce command, it is necessary to set : The registry property that points to the schema registry instance. Zoe uses this property to fetch the avro schema needed to transform the json data into avro. The required serializer properties of the producer in the props section of the cluster config. In addition, you need to set the subject name of the topic in the topic's configuration. A good enough configuration for producing avro data may look like the following : clusters : my-cluster : props : bootstrap.servers : my-cluster.example.com:9094 key.serializer : org.apache.kafka.common.serialization.StringSerializer value.serializer : io.confluent.kafka.serializers.KafkaAvroSerializer value.subject.name.strategy : io.confluent.kafka.serializers.subject.TopicRecordNameStrategy registry : https://my-registry.example.com topics : my-topic : name : long-topic-name subject : long-topic-name-com.adevinta.schemas.v1.Example With the configuration above, you can execute the following command : zoe -v --cluster my-cluster \\ topics produce \\ --from-file data.json \\ --topic my-topic \\ --key-path 'id' The command above would do the following : It fetches the avro schema registered under the subject name long-topic-name-com.adevinta.schemas.v1.Example in the schema registry instance pointed at by the registry property in the configuration. It uses the schema to transform the json data in data.json into avro GenericRecord instances. Writes the generic records into long-name-topic (aliased by my-topic ).","title":"Producing Avro data"},{"location":"advanced/avro/#interacting-with-the-registry","text":"You can also interact with the schema registry using the zoe schemas command. Here is a non exhaustive list of what you can do : List avro schemas registered into the registry Describe a specific Avro schema Deploy an avro schema into the registry from an .avsc or .avdl file.","title":"Interacting with the registry"},{"location":"advanced/avro/#where-to-go-from-here","text":"There is a hands on tutorial on using zoe with avro at : guides/avro . Learn more about interacting with the registry with : zoe schemas --help","title":"Where to go from here"},{"location":"advanced/expressions/","text":"Registered expressions We saw in the section about consuming data with zoe that zoe can make use of Jmespath filter expressions to output only a subset of the data read from Kafka. Jmespath expressions can be long and tedious to write especially in the command line. Some characters like quotes and backticks may be interpreted wrongly by the shell. Additionally, it may be repetitive to write if the expression is commonly used. Zoe allows us to save reusable Jmespath expressions in the configuration file and refer to them by an alias when using zoe. Registered expressions without arguments Registered expressions are set under the expressions key in zoe's configuration file : expressions : popular_facts : \"upvotes >= `2`\" The example above shows a registered expression aliased by popular_facts that represents the expression upvotes >= 2 . We can refer to this expression using @popular_facts() with zoe : zoe -v -c my-cluster topics consume --filter '@popular_facts()' Zoe will replace @popular_facts() by upvotes >= '2' at runtime without having bash interfering with our expression. Registered expressions with arguments Registered expressions can accept named arguments. Here is an example of an expression that expects a single argument named value : expressions : short_id : \"ends_with(id, '{{ value }}')\" Notice the {{ value }} part. When referring to the expression with @short_id , zoe will expect an argument named value : zoe -v -c my-cluster topics consume --filter '@short_id(value=22121)' Zoe replaces @short_id(value=22121) with ends_with(id, '22121') at runtime. It is also possible for a registered expression to accept multiple named arguments. They just need to be separated by a comma. Tip Registered expressions allow team members to share commonly used filters between them. A good practice is to put these expressions in the common.yml config file so that expressions become available in all the environments.","title":"Registered expressions"},{"location":"advanced/expressions/#registered-expressions","text":"We saw in the section about consuming data with zoe that zoe can make use of Jmespath filter expressions to output only a subset of the data read from Kafka. Jmespath expressions can be long and tedious to write especially in the command line. Some characters like quotes and backticks may be interpreted wrongly by the shell. Additionally, it may be repetitive to write if the expression is commonly used. Zoe allows us to save reusable Jmespath expressions in the configuration file and refer to them by an alias when using zoe.","title":"Registered expressions"},{"location":"advanced/expressions/#registered-expressions-without-arguments","text":"Registered expressions are set under the expressions key in zoe's configuration file : expressions : popular_facts : \"upvotes >= `2`\" The example above shows a registered expression aliased by popular_facts that represents the expression upvotes >= 2 . We can refer to this expression using @popular_facts() with zoe : zoe -v -c my-cluster topics consume --filter '@popular_facts()' Zoe will replace @popular_facts() by upvotes >= '2' at runtime without having bash interfering with our expression.","title":"Registered expressions without arguments"},{"location":"advanced/expressions/#registered-expressions-with-arguments","text":"Registered expressions can accept named arguments. Here is an example of an expression that expects a single argument named value : expressions : short_id : \"ends_with(id, '{{ value }}')\" Notice the {{ value }} part. When referring to the expression with @short_id , zoe will expect an argument named value : zoe -v -c my-cluster topics consume --filter '@short_id(value=22121)' Zoe replaces @short_id(value=22121) with ends_with(id, '22121') at runtime. It is also possible for a registered expression to accept multiple named arguments. They just need to be separated by a comma. Tip Registered expressions allow team members to share commonly used filters between them. A good practice is to put these expressions in the common.yml config file so that expressions become available in all the environments.","title":"Registered expressions with arguments"},{"location":"advanced/runners/kubernetes/","text":"Kubernetes runner The kubernetes runner launches the consumer / producer processes as pods in a remote kubernetes cluster. This runner needs to be configured in the runners.config.kubernetes section in zoe's configuration file to target your existing kubernetes cluster. In order to locate and authenticate with the remote cluster, Zoe relies on the usual kube config file that is usually in ~/.kube/config . It uses the current context by default unless set otherwise in the configuration. It's also possible to configure the pods memory / cpu limits. Here is a complete configuration for the kubernetes runner: runners : default : kubernetes config : kubernetes : # Context to use. Optional: By default, zoe uses the current context set in the kube config file. context : mu-kube-context # Namespace to use. Optional: By default, zoe uses the 'default' namespace. namespace : env-staging # Delete pods after completion ? deletePodAfterCompletion : true # CPU limits cpu : \"1\" # Memory limits memory : \"512M\" # Timeout for the client operations. timeoutMs : 300000","title":"Kubernetes"},{"location":"advanced/runners/kubernetes/#kubernetes-runner","text":"The kubernetes runner launches the consumer / producer processes as pods in a remote kubernetes cluster. This runner needs to be configured in the runners.config.kubernetes section in zoe's configuration file to target your existing kubernetes cluster. In order to locate and authenticate with the remote cluster, Zoe relies on the usual kube config file that is usually in ~/.kube/config . It uses the current context by default unless set otherwise in the configuration. It's also possible to configure the pods memory / cpu limits. Here is a complete configuration for the kubernetes runner: runners : default : kubernetes config : kubernetes : # Context to use. Optional: By default, zoe uses the current context set in the kube config file. context : mu-kube-context # Namespace to use. Optional: By default, zoe uses the 'default' namespace. namespace : env-staging # Delete pods after completion ? deletePodAfterCompletion : true # CPU limits cpu : \"1\" # Memory limits memory : \"512M\" # Timeout for the client operations. timeoutMs : 300000","title":"Kubernetes runner"},{"location":"advanced/runners/lambda/","text":"Lambda runner The lambda runner triggers lambda functions to read / produce to the Kafka clusters. The lambda function needs to be deployed beforehand using the zoe CLI. The deployment context of the lambda function needs to be configured in the lambda section of the runners config : runners : default : lambda config : lambda : deploy : subnets : [ \"subnet-xxxxxxx\" ] securityGroups : [ \"sg-yyyyyyy\" ] memory : 512 timeout : 500 credentials : type : \"profile\" name : \"my-profile\" awsRegion : eu-west-1 To the deploy the lambda function using the configured deployment context: zoe -v lambda deploy Zoe deploys the lambda function in 2 steps : It deploys a minimal set of resources needed by the lambda using CloudFormation (an S3 bucket, AWS roles, etc.). For more details on the resources deployed, checkout the cloudformation template . It deploys the lambda function itself by uploading the local Zoe JAR into AWS and registering the lambda within AWS. Zoe jar path needs to be set and must point to a valid zoe core jar downloaded beforehand (Todo: a guide for this). Once the lambda function is deployed, you can use the lambda runner to interact with your cluster : zoe -c my-cluster -r lambda topics consume input -n 10 Supported credentials The authentication method is configured in the credentials section of the lambda runner config. 3 Authentication types are supported : Default: this will use the default AWS credentials chain to authenticate with AWS. credentials : type : \"default\" Profile: uses the configured profile to authenticate with AWS. The chosen profile needs to be configured in ~/.aws/credentials . credentials : type : \"profile\" name : \"my-profile\" Static: uses the statically set keys to authenticate with AWS. The keys themselves can be secrets resolved at runtime by the secrets provider . credentials : type : \"static\" accessKey : \"accessKey\" secretAccessKey : \"secretAccessKey\" How to deal with an unsupported authentication method There are currently a bunch of other authentication methods that zoe doesn't support yet. Few examples are: MFA in the command line, the new AWS Single Sign On, etc. If you are dealing with such an unsupported authentication method, you can easily workaround it by generating an STS session and let zoe make use it. To make the process seamless, you can use the awesome AWS Vault that makes it almost transparent. For zoe to be able to discover STS sessions, you need to use the default credentials type: runners: default: lambda config: lambda: credentials: type: \"default\" ... You can use AWS Vault to make generating STS sessions transparent with zoe by using: command aws-vault exec my-aws-profile-with-sso -- zoe topics list You can even simplify the process further by creating an alias: # Create an alias alias zoe-pro = 'aws-vault exec my-aws-profile-with-sso -- zoe' # Use it here zoe-pro topics list","title":"Lambda"},{"location":"advanced/runners/lambda/#lambda-runner","text":"The lambda runner triggers lambda functions to read / produce to the Kafka clusters. The lambda function needs to be deployed beforehand using the zoe CLI. The deployment context of the lambda function needs to be configured in the lambda section of the runners config : runners : default : lambda config : lambda : deploy : subnets : [ \"subnet-xxxxxxx\" ] securityGroups : [ \"sg-yyyyyyy\" ] memory : 512 timeout : 500 credentials : type : \"profile\" name : \"my-profile\" awsRegion : eu-west-1 To the deploy the lambda function using the configured deployment context: zoe -v lambda deploy Zoe deploys the lambda function in 2 steps : It deploys a minimal set of resources needed by the lambda using CloudFormation (an S3 bucket, AWS roles, etc.). For more details on the resources deployed, checkout the cloudformation template . It deploys the lambda function itself by uploading the local Zoe JAR into AWS and registering the lambda within AWS. Zoe jar path needs to be set and must point to a valid zoe core jar downloaded beforehand (Todo: a guide for this). Once the lambda function is deployed, you can use the lambda runner to interact with your cluster : zoe -c my-cluster -r lambda topics consume input -n 10","title":"Lambda runner"},{"location":"advanced/runners/lambda/#supported-credentials","text":"The authentication method is configured in the credentials section of the lambda runner config. 3 Authentication types are supported : Default: this will use the default AWS credentials chain to authenticate with AWS. credentials : type : \"default\" Profile: uses the configured profile to authenticate with AWS. The chosen profile needs to be configured in ~/.aws/credentials . credentials : type : \"profile\" name : \"my-profile\" Static: uses the statically set keys to authenticate with AWS. The keys themselves can be secrets resolved at runtime by the secrets provider . credentials : type : \"static\" accessKey : \"accessKey\" secretAccessKey : \"secretAccessKey\"","title":"Supported credentials"},{"location":"advanced/runners/lambda/#how-to-deal-with-an-unsupported-authentication-method","text":"There are currently a bunch of other authentication methods that zoe doesn't support yet. Few examples are: MFA in the command line, the new AWS Single Sign On, etc. If you are dealing with such an unsupported authentication method, you can easily workaround it by generating an STS session and let zoe make use it. To make the process seamless, you can use the awesome AWS Vault that makes it almost transparent. For zoe to be able to discover STS sessions, you need to use the default credentials type: runners: default: lambda config: lambda: credentials: type: \"default\" ... You can use AWS Vault to make generating STS sessions transparent with zoe by using: command aws-vault exec my-aws-profile-with-sso -- zoe topics list You can even simplify the process further by creating an alias: # Create an alias alias zoe-pro = 'aws-vault exec my-aws-profile-with-sso -- zoe' # Use it here zoe-pro topics list","title":"How to deal with an unsupported authentication method"},{"location":"advanced/runners/local/","text":"Local runner The local runner launches the consumer / producers in the same JVM process as the zoe CLI. This should be used when consuming from a local kafka cluster. It can also be used against a remote kafka cluster if it's reachable from the local machine. The local runner can be selected using : zoe -c my-cluster -r local topics consume input -n 10","title":"Local"},{"location":"advanced/runners/local/#local-runner","text":"The local runner launches the consumer / producers in the same JVM process as the zoe CLI. This should be used when consuming from a local kafka cluster. It can also be used against a remote kafka cluster if it's reachable from the local machine. The local runner can be selected using : zoe -c my-cluster -r local topics consume input -n 10","title":"Local runner"},{"location":"advanced/runners/overview/","text":"Zoe runners When using commands like zoe consume , zoe has the ability to run the Kafka consumers remotely in kubernetes pods and seamlessly get the responses back to the CLI. It can do the same with all the other commands that require interaction with Kafka. This behavior is possible thanks to Zoe's concept of runners. Zoe currently supports 3 runners : Local runner : Launches the consumers / producers on the same JVM process as the zoe CLI. Kubernetes runner : Launches the consumers / producers as pods on a remote kubernetes cluster. Lambda runner : Launches the consumers / producers on a pre-deployed lambda functions. Zoe can deploy this lambda itself. A specific runner can be selected using the --runner or -r option : command zoe -c my-cluster --runner kubernetes topics consume input -n 5 output { \"_id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 6 , \"userUpvoted\" : null } { \"_id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 5 , \"userUpvoted\" : null } { \"_id\" : \"591d9b2f227c1a0020d26823\" , \"text\" : \"Every year, nearly four million cats are eaten in ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"59951d5ef2db18002031693c\" , \"text\" : \"America\u2019s cats, including housecats that adventure...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"5a4d76916ef087002174c28b\" , \"text\" : \"A cat\u2019s nose pad is ridged with a unique pattern, ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } The command above offloads the consumption of the topic to a kubernetes pod. The result will seamlessly be output by the CLI as if the runner was local. Runners configuration is set in zoe's configuration file in the runners section: runners : default : lambda config : kubernetes : context : mu-kube-context namespace : env-staging lambda : deploy : subnets : [ \"subnet-xxxxxxx\" ] securityGroups : [ \"sg-yyyyyyy\" ] memory : 512 timeout : 500 credentials : type : \"profile\" name : \"spt-tranquility-pre\" awsRegion : eu-west-1","title":"Overview"},{"location":"advanced/runners/overview/#zoe-runners","text":"When using commands like zoe consume , zoe has the ability to run the Kafka consumers remotely in kubernetes pods and seamlessly get the responses back to the CLI. It can do the same with all the other commands that require interaction with Kafka. This behavior is possible thanks to Zoe's concept of runners. Zoe currently supports 3 runners : Local runner : Launches the consumers / producers on the same JVM process as the zoe CLI. Kubernetes runner : Launches the consumers / producers as pods on a remote kubernetes cluster. Lambda runner : Launches the consumers / producers on a pre-deployed lambda functions. Zoe can deploy this lambda itself. A specific runner can be selected using the --runner or -r option : command zoe -c my-cluster --runner kubernetes topics consume input -n 5 output { \"_id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 6 , \"userUpvoted\" : null } { \"_id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 5 , \"userUpvoted\" : null } { \"_id\" : \"591d9b2f227c1a0020d26823\" , \"text\" : \"Every year, nearly four million cats are eaten in ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"59951d5ef2db18002031693c\" , \"text\" : \"America\u2019s cats, including housecats that adventure...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"5a4d76916ef087002174c28b\" , \"text\" : \"A cat\u2019s nose pad is ridged with a unique pattern, ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } The command above offloads the consumption of the topic to a kubernetes pod. The result will seamlessly be output by the CLI as if the runner was local. Runners configuration is set in zoe's configuration file in the runners section: runners : default : lambda config : kubernetes : context : mu-kube-context namespace : env-staging lambda : deploy : subnets : [ \"subnet-xxxxxxx\" ] securityGroups : [ \"sg-yyyyyyy\" ] memory : 512 timeout : 500 credentials : type : \"profile\" name : \"spt-tranquility-pre\" awsRegion : eu-west-1","title":"Zoe runners"},{"location":"advanced/secrets/envvars/","text":"Environment variables secrets provider This secrets provider looks up secret values from the environment. When zoe encounters secret:SECRET_NAME in the configuration, this provider searches for an environment variable named SECRET_NAME . The name of the environment variable to look for can be altered using the append or prepend config properties : secrets : provider : env append : ZOE_SECRET prepend : _PRO In the configuration above, when zoe encounters secret:JAAS_CONFIG , this provider looks up for an environment variable named ZOE_SECRET_JAAS_CONFIG_PRO . The append and prepend properties are useful when using the same secret name across different zoe environment files . Here is a typical example of a staging.yml and a prod.yml file: staging.yml secrets : provider : env append : ZOE_SECRET prepend : _STAGING clusters : my-kafka-cluster : props : bootstrap.servers : my-kafka-cluster-staging.example.com:9092 security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 sasl.jaas.config : secret:JAAS_CONFIG prod.yml secrets : provider : env append : ZOE_SECRET prepend : _PROD clusters : my-kafka-cluster : props : bootstrap.servers : my-kafka-cluster-production.example.com:9092 security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 sasl.jaas.config : secret:JAAS_CONFIG In this case : when using zoe -e staging ... , the JAAS_CONFIG secret wil be retrieved from the environment variable ZOE_SECRET_JAAS_CONFIG_STAGING . when using : zoe -e prod ... , the JAAS_CONFIG secret wil be retrieved from the environment variable ZOE_SECRET_JAAS_CONFIG_PROD .","title":"Environment variables provider"},{"location":"advanced/secrets/envvars/#environment-variables-secrets-provider","text":"This secrets provider looks up secret values from the environment. When zoe encounters secret:SECRET_NAME in the configuration, this provider searches for an environment variable named SECRET_NAME . The name of the environment variable to look for can be altered using the append or prepend config properties : secrets : provider : env append : ZOE_SECRET prepend : _PRO In the configuration above, when zoe encounters secret:JAAS_CONFIG , this provider looks up for an environment variable named ZOE_SECRET_JAAS_CONFIG_PRO . The append and prepend properties are useful when using the same secret name across different zoe environment files . Here is a typical example of a staging.yml and a prod.yml file: staging.yml secrets : provider : env append : ZOE_SECRET prepend : _STAGING clusters : my-kafka-cluster : props : bootstrap.servers : my-kafka-cluster-staging.example.com:9092 security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 sasl.jaas.config : secret:JAAS_CONFIG prod.yml secrets : provider : env append : ZOE_SECRET prepend : _PROD clusters : my-kafka-cluster : props : bootstrap.servers : my-kafka-cluster-production.example.com:9092 security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 sasl.jaas.config : secret:JAAS_CONFIG In this case : when using zoe -e staging ... , the JAAS_CONFIG secret wil be retrieved from the environment variable ZOE_SECRET_JAAS_CONFIG_STAGING . when using : zoe -e prod ... , the JAAS_CONFIG secret wil be retrieved from the environment variable ZOE_SECRET_JAAS_CONFIG_PROD .","title":"Environment variables secrets provider"},{"location":"advanced/secrets/overview/","text":"Secrets providers Zoe allows us to use secrets in the configuration files without exposing their values. The secret values are resolved at runtime by zoe via secrets providers. This mechanism makes configuration files more easily shareable among the team using git repositories. Secrets in zoe's configuration files usually take the form of secret:SECRET_NAME . They can also sometimes take the longer form of secret:{option_1}:{option_2}:SECRET_NAME to provide additional options to secrets provider. A typical use case of using secrets and secrets providers is when dealing with a kafka cluster protected behind a SASL authentication. In this scenario, to interact with the cluster (to consume or produce data) we need to supply credentials in the clients properties (Notice the sasl.jaas.config ): clusters : my-kafka-cluster : props : bootstrap.servers : my-kafka-cluster.example.com:9092 security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 sasl.jaas.config : org.apache.kafka.common.security.scram.ScramLoginModule required username=\"my-ser\" password=\"my-password\"; ... ... Storing credentials that way in the configuration file makes it not easily shareable among the team in git repositories or kubernetes config maps. To improve this, we can use zoe's support for secrets: clusters : my-kafka-cluster : props : bootstrap.servers : my-kafka-cluster.example.com:9092 security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 sasl.jaas.config : secrets:JAAS_CONFIG ... secrets : provider : env ... When zoe encounters secrets:JAAS_CONFIG , it uses the configured secrets provider to search for a secret named JAAS_CONFIG and uses its value to replace secret:JAAS_CONFIG . Zoe currently supports 2 secrets provider (more may be supported in the future) : Environment variables secrets provider : looks up secret values from the environment. Strongbox secrets provider : uses strongbox to fetch secret values.","title":"Overview"},{"location":"advanced/secrets/overview/#secrets-providers","text":"Zoe allows us to use secrets in the configuration files without exposing their values. The secret values are resolved at runtime by zoe via secrets providers. This mechanism makes configuration files more easily shareable among the team using git repositories. Secrets in zoe's configuration files usually take the form of secret:SECRET_NAME . They can also sometimes take the longer form of secret:{option_1}:{option_2}:SECRET_NAME to provide additional options to secrets provider. A typical use case of using secrets and secrets providers is when dealing with a kafka cluster protected behind a SASL authentication. In this scenario, to interact with the cluster (to consume or produce data) we need to supply credentials in the clients properties (Notice the sasl.jaas.config ): clusters : my-kafka-cluster : props : bootstrap.servers : my-kafka-cluster.example.com:9092 security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 sasl.jaas.config : org.apache.kafka.common.security.scram.ScramLoginModule required username=\"my-ser\" password=\"my-password\"; ... ... Storing credentials that way in the configuration file makes it not easily shareable among the team in git repositories or kubernetes config maps. To improve this, we can use zoe's support for secrets: clusters : my-kafka-cluster : props : bootstrap.servers : my-kafka-cluster.example.com:9092 security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 sasl.jaas.config : secrets:JAAS_CONFIG ... secrets : provider : env ... When zoe encounters secrets:JAAS_CONFIG , it uses the configured secrets provider to search for a secret named JAAS_CONFIG and uses its value to replace secret:JAAS_CONFIG . Zoe currently supports 2 secrets provider (more may be supported in the future) : Environment variables secrets provider : looks up secret values from the environment. Strongbox secrets provider : uses strongbox to fetch secret values.","title":"Secrets providers"},{"location":"advanced/secrets/strongbox/","text":"Strongbox secrets provider This secrets provider fetches secret values from strongbox . To use the strongbox secrets provider, add the following in zoe's configuration : secrets : provider : strongbox region : eu-west-1 group : my-group Using the configuration above, when zoe encounters secret:JAAS_CONFIG , the strongbox secrets provider looks up a secret named JAAS_CONFIG that belongs to the group named my-group from strongbox. Supported credentials The strongbox secrets provider needs to authenticate to AWS. By default, it uses the AWS default credentials chain. But this can be overridden in the credentials section of the strongbox provider config. The same credentials types are supported as the lambda credentials : profile secrets : provider : \"strongbox\" region : \"eu-west-1\" group : \"my-group\" credentials : type : \"profile\" name : \"my-customr-profile\" static secrets : provider : \"strongbox\" region : \"eu-west-1\" group : \"my-group\" credentials : type : \"static\" accessKey : \"accessKey\" secretAccessKey : \"secretAccessKey\"","title":"Strongbox provider"},{"location":"advanced/secrets/strongbox/#strongbox-secrets-provider","text":"This secrets provider fetches secret values from strongbox . To use the strongbox secrets provider, add the following in zoe's configuration : secrets : provider : strongbox region : eu-west-1 group : my-group Using the configuration above, when zoe encounters secret:JAAS_CONFIG , the strongbox secrets provider looks up a secret named JAAS_CONFIG that belongs to the group named my-group from strongbox.","title":"Strongbox secrets provider"},{"location":"advanced/secrets/strongbox/#supported-credentials","text":"The strongbox secrets provider needs to authenticate to AWS. By default, it uses the AWS default credentials chain. But this can be overridden in the credentials section of the strongbox provider config. The same credentials types are supported as the lambda credentials : profile secrets : provider : \"strongbox\" region : \"eu-west-1\" group : \"my-group\" credentials : type : \"profile\" name : \"my-customr-profile\" static secrets : provider : \"strongbox\" region : \"eu-west-1\" group : \"my-group\" credentials : type : \"static\" accessKey : \"accessKey\" secretAccessKey : \"secretAccessKey\"","title":"Supported credentials"},{"location":"basics/consume/","text":"Consuming data In this step, we will learn more about the consume command by reading the data produced during the previous section. Prerequisites You should have completed the two previous steps : Prepare the environment Producing data Consuming data To consume data from the input topic (alias of the input-topic ), use the following command : command zoe -v --cluster local topics consume input output { \"_id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 6 , \"userUpvoted\" : null } { \"_id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 5 , \"userUpvoted\" : null } { \"_id\" : \"591d9b2f227c1a0020d26823\" , \"text\" : \"Every year, nearly four million cats are eaten in ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"59951d5ef2db18002031693c\" , \"text\" : \"America\u2019s cats, including housecats that adventure...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"5a4d76916ef087002174c28b\" , \"text\" : \"A cat\u2019s nose pad is ridged with a unique pattern, ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } By default, zoe consumes 5 records starting from the last hour. Controlling the time range We can control the number of output records ( -n ) and the starting time of the consumption ( --from ). For example, to start the consumption from the last 6 hours and read only 2 records: command zoe -v --cluster local topics consume input -n 2 --from 'PT6h' output { \"_id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 6 , \"userUpvoted\" : null } { \"_id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 5 , \"userUpvoted\" : null } The --from option takes a duration in ISO-8601 format . Selecting a subset of the fields We can format the output rows by using the --query option and giving it a jmespath expression . Zoe will run this Jmespath expression against each message and the result will be output instead of the original message itself. A typical use case is when we want only a subset of the existing fields: command zoe -v --cluster local \\ topics consume input \\ --query '{id: _id, text: text, user: user.name}' output { \"id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} { \"id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} { \"id\" : \"591d9b2f227c1a0020d26823\" , \"text\" : \"Every year, nearly four million cats are eaten in ...\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} { \"id\" : \"59951d5ef2db18002031693c\" , \"text\" : \"America\u2019s cats, including housecats that adventure...\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} { \"id\" : \"5a4d76916ef087002174c28b\" , \"text\" : \"A cat\u2019s nose pad is ridged with a unique pattern, ...\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} Pretty display Zoe can display the consumed data in a nicely formatted table by using the --output table option: command zoe -v --cluster local \\ --output table \\ topics consume input \\ --query '{id: _id, text: text, user: user.name}' output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 id \u2502 text \u2502 user \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b199196ce456e001424256a \u2502 Cats can distinguish different flavors in water. \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b1b411d841d9700146158d9 \u2502 The Egyptian Mau\u2019s name is derived from the Middle... \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 591d9b2f227c1a0020d26823 \u2502 Every year, nearly four million cats are eaten in ... \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 59951d5ef2db18002031693c \u2502 America\u2019s cats, including housecats that adventure... \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5a4d76916ef087002174c28b \u2502 A cat\u2019s nose pad is ridged with a unique pattern, ... \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 We can also use the --output json to output a valid json instead of a json per row : command zoe -v --cluster local \\ --output json \\ topics consume input \\ --query '{id: _id, text: text, user: user.name}' \\ -n 2 output [ { \"id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"user\" : { \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" } }, { \"id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"user\" : { \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" } } ] These display options are not only availabe for the consume . They are available for all the zoe commands. In fact, Zoe can consistently display all its output as a table. Filtering data based on content Zoe can also use Jmespath expressions that return a boolean to filter the output messages. Zoe runs this expression against each message and depending on the boolean result, zoe will discard the message or not. This feature can be used to perform searches into Kafka topics. It is one of the most interesting features of Zoe. When combined with remote runners (ex. --runner kubernetes ) and parallel execution ( --jobs 20 to spin up 20 pods), we can perform expensive searches in large topics in a relatively short amount of time. You can learn more about runners and parallel execution in the advanced section of the documentation. Filters are enabled with the --filter option. For example, to read only Kasimir's cat facts : command zoe -v --cluster local \\ topics consume input \\ --from 'PT6h' \\ --filter \"user.name.first == 'Kasimir'\" \\ --query '{user: user.name, text: text}' output { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"Cats are the most popular pet in the United States...\" } { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"In tigers and tabbies, the middle of the tongue is...\" } { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"A cat can jump up to six times its length.\" } { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"There are cats who have survived falls from over 3...\" } { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"The technical term for \\\"hairball\\\" is \\\"bezoar.\\\"\" } If we are dealing with a large topic and want to search for seven days of data, we can offload the consumption to kubernetes and spin up 25 pods to consume data in parallel using the following command : command zoe --cluster my-production-cluster \\ --runner kubernetes \\ topics consume input \\ --from 'P7d' \\ --filter \"user.name.first == 'Kasimir'\" \\ --jobs 25 This command will not work as is on your computer at this stage because this requires additional work to configure access to a kubernetes cluster with zoe. But there is a tutorial available in this documentation to try out zoe with a kubernetes cluster using Minikube.","title":"Consuming data"},{"location":"basics/consume/#consuming-data","text":"In this step, we will learn more about the consume command by reading the data produced during the previous section.","title":"Consuming data"},{"location":"basics/consume/#prerequisites","text":"You should have completed the two previous steps : Prepare the environment Producing data","title":"Prerequisites"},{"location":"basics/consume/#consuming-data_1","text":"To consume data from the input topic (alias of the input-topic ), use the following command : command zoe -v --cluster local topics consume input output { \"_id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 6 , \"userUpvoted\" : null } { \"_id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 5 , \"userUpvoted\" : null } { \"_id\" : \"591d9b2f227c1a0020d26823\" , \"text\" : \"Every year, nearly four million cats are eaten in ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"59951d5ef2db18002031693c\" , \"text\" : \"America\u2019s cats, including housecats that adventure...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } { \"_id\" : \"5a4d76916ef087002174c28b\" , \"text\" : \"A cat\u2019s nose pad is ridged with a unique pattern, ...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 4 , \"userUpvoted\" : null } By default, zoe consumes 5 records starting from the last hour.","title":"Consuming data"},{"location":"basics/consume/#controlling-the-time-range","text":"We can control the number of output records ( -n ) and the starting time of the consumption ( --from ). For example, to start the consumption from the last 6 hours and read only 2 records: command zoe -v --cluster local topics consume input -n 2 --from 'PT6h' output { \"_id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 6 , \"userUpvoted\" : null } { \"_id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"type\" : \"cat\" , \"user\" :{ \"_id\" : \"5a9ac18c7478810ea6c06381\" , \"name\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}, \"upvotes\" : 5 , \"userUpvoted\" : null } The --from option takes a duration in ISO-8601 format .","title":"Controlling the time range"},{"location":"basics/consume/#selecting-a-subset-of-the-fields","text":"We can format the output rows by using the --query option and giving it a jmespath expression . Zoe will run this Jmespath expression against each message and the result will be output instead of the original message itself. A typical use case is when we want only a subset of the existing fields: command zoe -v --cluster local \\ topics consume input \\ --query '{id: _id, text: text, user: user.name}' output { \"id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} { \"id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} { \"id\" : \"591d9b2f227c1a0020d26823\" , \"text\" : \"Every year, nearly four million cats are eaten in ...\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} { \"id\" : \"59951d5ef2db18002031693c\" , \"text\" : \"America\u2019s cats, including housecats that adventure...\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }} { \"id\" : \"5a4d76916ef087002174c28b\" , \"text\" : \"A cat\u2019s nose pad is ridged with a unique pattern, ...\" , \"user\" :{ \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" }}","title":"Selecting a subset of the fields"},{"location":"basics/consume/#pretty-display","text":"Zoe can display the consumed data in a nicely formatted table by using the --output table option: command zoe -v --cluster local \\ --output table \\ topics consume input \\ --query '{id: _id, text: text, user: user.name}' output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 id \u2502 text \u2502 user \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b199196ce456e001424256a \u2502 Cats can distinguish different flavors in water. \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b1b411d841d9700146158d9 \u2502 The Egyptian Mau\u2019s name is derived from the Middle... \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 591d9b2f227c1a0020d26823 \u2502 Every year, nearly four million cats are eaten in ... \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 59951d5ef2db18002031693c \u2502 America\u2019s cats, including housecats that adventure... \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5a4d76916ef087002174c28b \u2502 A cat\u2019s nose pad is ridged with a unique pattern, ... \u2502 first: \"Alex\" \u2502 \u2502 \u2502 \u2502 last: \"Wohlbruck\" \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 We can also use the --output json to output a valid json instead of a json per row : command zoe -v --cluster local \\ --output json \\ topics consume input \\ --query '{id: _id, text: text, user: user.name}' \\ -n 2 output [ { \"id\" : \"5b199196ce456e001424256a\" , \"text\" : \"Cats can distinguish different flavors in water.\" , \"user\" : { \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" } }, { \"id\" : \"5b1b411d841d9700146158d9\" , \"text\" : \"The Egyptian Mau\u2019s name is derived from the Middle...\" , \"user\" : { \"first\" : \"Alex\" , \"last\" : \"Wohlbruck\" } } ] These display options are not only availabe for the consume . They are available for all the zoe commands. In fact, Zoe can consistently display all its output as a table.","title":"Pretty display"},{"location":"basics/consume/#filtering-data-based-on-content","text":"Zoe can also use Jmespath expressions that return a boolean to filter the output messages. Zoe runs this expression against each message and depending on the boolean result, zoe will discard the message or not. This feature can be used to perform searches into Kafka topics. It is one of the most interesting features of Zoe. When combined with remote runners (ex. --runner kubernetes ) and parallel execution ( --jobs 20 to spin up 20 pods), we can perform expensive searches in large topics in a relatively short amount of time. You can learn more about runners and parallel execution in the advanced section of the documentation. Filters are enabled with the --filter option. For example, to read only Kasimir's cat facts : command zoe -v --cluster local \\ topics consume input \\ --from 'PT6h' \\ --filter \"user.name.first == 'Kasimir'\" \\ --query '{user: user.name, text: text}' output { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"Cats are the most popular pet in the United States...\" } { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"In tigers and tabbies, the middle of the tongue is...\" } { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"A cat can jump up to six times its length.\" } { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"There are cats who have survived falls from over 3...\" } { \"user\" :{ \"first\" : \"Kasimir\" , \"last\" : \"Schulz\" }, \"text\" : \"The technical term for \\\"hairball\\\" is \\\"bezoar.\\\"\" } If we are dealing with a large topic and want to search for seven days of data, we can offload the consumption to kubernetes and spin up 25 pods to consume data in parallel using the following command : command zoe --cluster my-production-cluster \\ --runner kubernetes \\ topics consume input \\ --from 'P7d' \\ --filter \"user.name.first == 'Kasimir'\" \\ --jobs 25 This command will not work as is on your computer at this stage because this requires additional work to configure access to a kubernetes cluster with zoe. But there is a tutorial available in this documentation to try out zoe with a kubernetes cluster using Minikube.","title":"Filtering data based on content"},{"location":"basics/operations/","text":"Operations Zoe can do much more than just producing and consuming data from Kafka. In this section, you will find examples of some additional capabilities of zoe. Interacting with consumer groups Fetch the offsets and lags of a specific consumer group : command zoe -o table -v -c my-cluster groups offsets my-consumer-group-name output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 topic \u2502 partition \u2502 currentOffset \u2502 endOffset \u2502 lag \u2502 metadata \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 3 \u2502 49993793 \u2502 49993793 \u2502 0 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 4 \u2502 50275990 \u2502 50275991 \u2502 1 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 1 \u2502 50155761 \u2502 50155762 \u2502 1 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 2 \u2502 50212574 \u2502 50212574 \u2502 0 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 0 \u2502 50027346 \u2502 50027347 \u2502 1 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Consumer groups can also be given aliases in zoe's configuration. This is done in the groups section inside the cluster configuration. Refer to the configuration reference section. Use zoe groups --help for additional commands and examples to interact with consumer groups. Interacting with the Avro Schema Registry List avro schemas : command zoe -o table -v -c my-cluster schemas list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 subjects \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 input-topic-value \u2502 \u2502 input-topic-key \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Describe a schema : command zoe -o json -v -c my-cluster schemas describe input-topic-value output { \"subject\" : \"input-topic-value\" , \"versions\" : [ 2 ], \"latest\" : \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"my-schema\\\",\\\"namespace\\\":\\\"com.adevinta.example\\\",\\\"fields\\\":[...]}\" } Deploy avro schema using an .avdl file : command zoe -c my-cluster \\ schemas deploy \\ --avdl \\ --from-file schema.avdl \\ --name ModuleReason \\ --strategy topicRecord --topic input Use zoe schemas --help for additional commands and help on interacting with schemas.","title":"Operations"},{"location":"basics/operations/#operations","text":"Zoe can do much more than just producing and consuming data from Kafka. In this section, you will find examples of some additional capabilities of zoe.","title":"Operations"},{"location":"basics/operations/#interacting-with-consumer-groups","text":"Fetch the offsets and lags of a specific consumer group : command zoe -o table -v -c my-cluster groups offsets my-consumer-group-name output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 topic \u2502 partition \u2502 currentOffset \u2502 endOffset \u2502 lag \u2502 metadata \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 3 \u2502 49993793 \u2502 49993793 \u2502 0 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 4 \u2502 50275990 \u2502 50275991 \u2502 1 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 1 \u2502 50155761 \u2502 50155762 \u2502 1 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 2 \u2502 50212574 \u2502 50212574 \u2502 0 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 my-topic \u2502 0 \u2502 50027346 \u2502 50027347 \u2502 1 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Consumer groups can also be given aliases in zoe's configuration. This is done in the groups section inside the cluster configuration. Refer to the configuration reference section. Use zoe groups --help for additional commands and examples to interact with consumer groups.","title":"Interacting with consumer groups"},{"location":"basics/operations/#interacting-with-the-avro-schema-registry","text":"List avro schemas : command zoe -o table -v -c my-cluster schemas list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 subjects \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 input-topic-value \u2502 \u2502 input-topic-key \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Describe a schema : command zoe -o json -v -c my-cluster schemas describe input-topic-value output { \"subject\" : \"input-topic-value\" , \"versions\" : [ 2 ], \"latest\" : \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"my-schema\\\",\\\"namespace\\\":\\\"com.adevinta.example\\\",\\\"fields\\\":[...]}\" } Deploy avro schema using an .avdl file : command zoe -c my-cluster \\ schemas deploy \\ --avdl \\ --from-file schema.avdl \\ --name ModuleReason \\ --strategy topicRecord --topic input Use zoe schemas --help for additional commands and help on interacting with schemas.","title":"Interacting with the Avro Schema Registry"},{"location":"basics/overview/","text":"Getting started This getting started guide will show you step by step how to efficiently use zoe to interact with your kafka clusters. In summary, this guide includes the following steps : Prepare the environment : We will start by setting up the stage by spinning up a single node kafka cluster locally initialized with some topics. We will then configure zoe to make it know about this cluster to start interacting with it. Producing data into topics : We will use zoe to write some json data into Kafka. The dataset used is a funny one from the Cat Facts API. Reading data from topics : You will see the basics of reading data with zoe. We will cover the filtering basics, formatting and pretty printing. This part will hover over some of the most powerful features of zoe... Ready to start ? Jump in to the next section !","title":"Overview"},{"location":"basics/overview/#getting-started","text":"This getting started guide will show you step by step how to efficiently use zoe to interact with your kafka clusters. In summary, this guide includes the following steps : Prepare the environment : We will start by setting up the stage by spinning up a single node kafka cluster locally initialized with some topics. We will then configure zoe to make it know about this cluster to start interacting with it. Producing data into topics : We will use zoe to write some json data into Kafka. The dataset used is a funny one from the Cat Facts API. Reading data from topics : You will see the basics of reading data with zoe. We will cover the filtering basics, formatting and pretty printing. This part will hover over some of the most powerful features of zoe... Ready to start ? Jump in to the next section !","title":"Getting started"},{"location":"basics/prepare/","text":"Prepare the environment In this step, we will spin up a single node kafka cluster with docker and docker compose. This cluster will be initialized with some topics created by an initializer script. We will then create the required zoe configuration to point to this cluster so we can start interacting with it. Prerequisites For this tutorial you will need : Zoe (follow the install instructions here ) Docker and docker-compose Spin up the Kafka cluster Clone the zoe repository and use the provided compose file to spin up the kafka cluster : # clone the repo git clone https://github.com/adevinta/zoe.git # go to the guides folder cd zoe/docs/guides/simple # spin up the stack docker-compose up -d Now you should have : A zookeeper node A kafka node 2 topics created : input-topic and another-topic Now let's go to the next step and configure zoe to point to this cluster. Configuring zoe Zoe uses a central configuration file to store all the information related to the kafka clusters we may interact with. This file keeps all the cluster properties ( bootstrap.servers , etc.) and topics configuration so we don't have to repeat them again and again each time we want to interact with the cluster. We can easily initialize a default configuration file using : command zoe -v config init logs 2020-03-07 01:43:16 INFO zoe: creating a new config file... This creates a default configuration file at ~/.zoe/config/default.yml that can be used as a starting point. The file looks like the following (some optional fields have been omitted for readability): clusters : local : props : bootstrap.servers : \"localhost:29092\" key.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" key.serializer : \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer : \"org.apache.kafka.common.serialization.ByteArraySerializer\" runners : default : \"local\" This config file defines the following elements : A clusters section where all the kafka clusters configuration are defined. Each cluster configuration is keyed by an alias. In the configuration above, a single kafka cluster configuration aliased by local is defined in the above config. This alias is what we will use to refer to this cluster when using zoe --cluster local . Each cluster configuration defines: A props section that represent the set of properties to be injected to the kafka clients when interacting with the cluster. A topics section that contain a list of topic configuration keyed by an alias. In the configuration above, one topic configuration is defined with the alias input . A topic configuration contains the real name of the topic (in this case input-topic ) and optionally a subject name if the topic is an avro topic. This alias is what we will use to refer to the topic when targeting it for writing or reading in zoe. This relieves us from the difficulty of dealing with and remembering long topic names. Lastly, there is a runners section that defines the local runner as the default. We will talk more about runners in the advanced section of this documentation but keep in mind that zoe offloads the consumption and the interaction with kafka clusters to \"runners\" that can either be local or remote (lambda functions or kubernetes pods). The default generated configuration is already enough to interact with our locally spinned up kafka cluster. We should be able to start interacting with it without any change. Let's use zoe to list the available topics : command zoe --cluster local topics list output [ \"input-topic\" , \"another-topic\" ] We can see that there is 2 topics within our cluster. To avoid having to remember their names, let's add them in the configuration and give them a friendly alias: clusters : local : props : bootstrap.servers : \"localhost:29092\" key.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" key.serializer : \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer : \"org.apache.kafka.common.serialization.ByteArraySerializer\" topics : input : name : \"input-topic\" another : name : \"another-topic\" runners : default : \"local\" Now that our configuration is ready, let's use zoe to produce some test data into the cluster .","title":"Prepare the environment"},{"location":"basics/prepare/#prepare-the-environment","text":"In this step, we will spin up a single node kafka cluster with docker and docker compose. This cluster will be initialized with some topics created by an initializer script. We will then create the required zoe configuration to point to this cluster so we can start interacting with it.","title":"Prepare the environment"},{"location":"basics/prepare/#prerequisites","text":"For this tutorial you will need : Zoe (follow the install instructions here ) Docker and docker-compose","title":"Prerequisites"},{"location":"basics/prepare/#spin-up-the-kafka-cluster","text":"Clone the zoe repository and use the provided compose file to spin up the kafka cluster : # clone the repo git clone https://github.com/adevinta/zoe.git # go to the guides folder cd zoe/docs/guides/simple # spin up the stack docker-compose up -d Now you should have : A zookeeper node A kafka node 2 topics created : input-topic and another-topic Now let's go to the next step and configure zoe to point to this cluster.","title":"Spin up the Kafka cluster"},{"location":"basics/prepare/#configuring-zoe","text":"Zoe uses a central configuration file to store all the information related to the kafka clusters we may interact with. This file keeps all the cluster properties ( bootstrap.servers , etc.) and topics configuration so we don't have to repeat them again and again each time we want to interact with the cluster. We can easily initialize a default configuration file using : command zoe -v config init logs 2020-03-07 01:43:16 INFO zoe: creating a new config file... This creates a default configuration file at ~/.zoe/config/default.yml that can be used as a starting point. The file looks like the following (some optional fields have been omitted for readability): clusters : local : props : bootstrap.servers : \"localhost:29092\" key.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" key.serializer : \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer : \"org.apache.kafka.common.serialization.ByteArraySerializer\" runners : default : \"local\" This config file defines the following elements : A clusters section where all the kafka clusters configuration are defined. Each cluster configuration is keyed by an alias. In the configuration above, a single kafka cluster configuration aliased by local is defined in the above config. This alias is what we will use to refer to this cluster when using zoe --cluster local . Each cluster configuration defines: A props section that represent the set of properties to be injected to the kafka clients when interacting with the cluster. A topics section that contain a list of topic configuration keyed by an alias. In the configuration above, one topic configuration is defined with the alias input . A topic configuration contains the real name of the topic (in this case input-topic ) and optionally a subject name if the topic is an avro topic. This alias is what we will use to refer to the topic when targeting it for writing or reading in zoe. This relieves us from the difficulty of dealing with and remembering long topic names. Lastly, there is a runners section that defines the local runner as the default. We will talk more about runners in the advanced section of this documentation but keep in mind that zoe offloads the consumption and the interaction with kafka clusters to \"runners\" that can either be local or remote (lambda functions or kubernetes pods). The default generated configuration is already enough to interact with our locally spinned up kafka cluster. We should be able to start interacting with it without any change. Let's use zoe to list the available topics : command zoe --cluster local topics list output [ \"input-topic\" , \"another-topic\" ] We can see that there is 2 topics within our cluster. To avoid having to remember their names, let's add them in the configuration and give them a friendly alias: clusters : local : props : bootstrap.servers : \"localhost:29092\" key.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" key.serializer : \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer : \"org.apache.kafka.common.serialization.ByteArraySerializer\" topics : input : name : \"input-topic\" another : name : \"another-topic\" runners : default : \"local\" Now that our configuration is ready, let's use zoe to produce some test data into the cluster .","title":"Configuring zoe"},{"location":"basics/produce/","text":"Producing data In this step, we are going to use zoe to write some json data into Kafka. Prerequisites You should have completed the previous step : Prepare the environment Producing data There are multiple ways to write json data to a Kafka cluster using zoe. Write data from stdin The simplest way is to inject the data from stdin : command echo '[{\"msg\": \"hello world\"}]' | zoe -v --cluster local topics produce --topic input --from-stdin output { \"produced\" : [ { \"offset\" : 2 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"timestamp\" : 1583483283555 } ], \"skipped\" : [] } logs 2020-03-06 09:28:02 INFO zoe: loading config from url : file: ~/.zoe/config/default.yml 2020-03-06 09:28:03 INFO zoe: producing '1' records to topic 'input-topic' 2020-03-06 09:28:03 INFO AppInfoParser: Kafka version: 2.3.1 2020-03-06 09:28:03 INFO AppInfoParser: Kafka commitId: 18a913733fb71c01 2020-03-06 09:28:03 INFO AppInfoParser: Kafka startTimeMs: 1583483283410 2020-03-06 09:28:03 INFO Metadata: [Producer clientId=producer-1] Cluster ID: y50BSUG2RzipAYoKITJuQg 2020-03-06 09:28:03 INFO KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. Zoe expects a valid json array as input from stdin. It iterates over the elements and writes them one by one to the target topic: the topic aliased input in this case. Remember that the alias input was given to the input-topic in zoe's configuration in the previous section . Now, we can check the data we have just written by using the consume command (we will learn more about the consume command in the next section) : input zoe -v --cluster local topics consume input -n 1 output { \"msg\" : \"hello world\" } We can have more information about the message key, offset and timestamp by adding the --verbose flag input zoe -v --cluster local topics consume input -n 1 --verbose output { \"key\" : \"2d57d220-7340-4c0c-ab66-fd51c0157cae\" , \"offset\" : 2 , \"timestamp\" : 1583483283555 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"formatted\" : { \"msg\" : \"hello world\" } } Notice that the message key is a generated UUID. By default, zoe generates UUID keys when writing messages into kafka. We can make it instead pick the key from a field in the message with the --key-path option: command echo '[{\"id\": \"1\", \"msg\": \"hello world\"}]' | zoe -v --cluster local topics produce --topic input --from-stdin --key-path 'id' output { \"produced\" : [ { \"offset\" : 3 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"timestamp\" : 1583488726267 } ], \"skipped\" : [] } The key path option argument is a Jmespath expression that is executed against each input message. The result of the expression will be used as the record's key. It is also possible to do the same to set the messages timestamp with the --ts-path . Use zoe topics produce --help for more information. Write data from a json file The other way to write data into Kafka with zoe is to use a json file. The following example uses a sample dataset downloaded from the cats facts API . You can inspect the sample in the repository at guides/simple/data.json . Let's write this json file into the input topic. command zoe -v topics produce --topic input --from-file docs/guides/simple/data.json logs 2020-03-06 11:07:18 INFO zoe: loading config from url : file:~/.zoe/config/default.yml 2020-03-06 11:07:18 INFO zoe: producing '212' records to topic 'input-topic' 2020-03-06 11:07:18 INFO AppInfoParser: Kafka version: 2.3.1 2020-03-06 11:07:18 INFO AppInfoParser: Kafka commitId: 18a913733fb71c01 2020-03-06 11:07:18 INFO AppInfoParser: Kafka startTimeMs: 1583489238910 2020-03-06 11:07:19 INFO Metadata: [Producer clientId=producer-1] Cluster ID: y50BSUG2RzipAYoKITJuQg 2020-03-06 11:07:19 INFO KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. output { \"produced\" : [ { \"offset\" : 4 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"timestamp\" : 1583489239047 }, { \"offset\" : 5 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"timestamp\" : 1583489239054 }, ... ], \"skipped\" : [] } You can know more about the produce command with zoe topics produce --help . Writing data in streaming mode In all the examples above, zoe was expecting a valid json array as input. This is because zoe parses the input data (from stdin or from a file) entirely before sending it to Kafka. This is the default behavior of the produce command. This behavior is not suitable when streaming data to the zoe produce command from a continuous data source (ex. a tcp connection or an http command) because: The data is usually not formatted as a Json Array. It's often rather a json per line. We do not want zoe to buffer all the data internally before sending it. For these cases, Zoe supports a streaming mode by setting a --streaming flag. In this mode : Zoe expects one valid json object per line (separated by line breaks) Zoe will keep listening to the input stream continuously. It needs to be stopped using a stop signal ( Ctrl-C ). Streaming mode can be enabled like the following : command echo '{\"msg\": \"hello world\"}' | zoe -v --cluster local topics produce --topic input --from-stdin --streaming","title":"Producing data"},{"location":"basics/produce/#producing-data","text":"In this step, we are going to use zoe to write some json data into Kafka.","title":"Producing data"},{"location":"basics/produce/#prerequisites","text":"You should have completed the previous step : Prepare the environment","title":"Prerequisites"},{"location":"basics/produce/#producing-data_1","text":"There are multiple ways to write json data to a Kafka cluster using zoe.","title":"Producing data"},{"location":"basics/produce/#write-data-from-stdin","text":"The simplest way is to inject the data from stdin : command echo '[{\"msg\": \"hello world\"}]' | zoe -v --cluster local topics produce --topic input --from-stdin output { \"produced\" : [ { \"offset\" : 2 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"timestamp\" : 1583483283555 } ], \"skipped\" : [] } logs 2020-03-06 09:28:02 INFO zoe: loading config from url : file: ~/.zoe/config/default.yml 2020-03-06 09:28:03 INFO zoe: producing '1' records to topic 'input-topic' 2020-03-06 09:28:03 INFO AppInfoParser: Kafka version: 2.3.1 2020-03-06 09:28:03 INFO AppInfoParser: Kafka commitId: 18a913733fb71c01 2020-03-06 09:28:03 INFO AppInfoParser: Kafka startTimeMs: 1583483283410 2020-03-06 09:28:03 INFO Metadata: [Producer clientId=producer-1] Cluster ID: y50BSUG2RzipAYoKITJuQg 2020-03-06 09:28:03 INFO KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. Zoe expects a valid json array as input from stdin. It iterates over the elements and writes them one by one to the target topic: the topic aliased input in this case. Remember that the alias input was given to the input-topic in zoe's configuration in the previous section . Now, we can check the data we have just written by using the consume command (we will learn more about the consume command in the next section) : input zoe -v --cluster local topics consume input -n 1 output { \"msg\" : \"hello world\" } We can have more information about the message key, offset and timestamp by adding the --verbose flag input zoe -v --cluster local topics consume input -n 1 --verbose output { \"key\" : \"2d57d220-7340-4c0c-ab66-fd51c0157cae\" , \"offset\" : 2 , \"timestamp\" : 1583483283555 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"formatted\" : { \"msg\" : \"hello world\" } } Notice that the message key is a generated UUID. By default, zoe generates UUID keys when writing messages into kafka. We can make it instead pick the key from a field in the message with the --key-path option: command echo '[{\"id\": \"1\", \"msg\": \"hello world\"}]' | zoe -v --cluster local topics produce --topic input --from-stdin --key-path 'id' output { \"produced\" : [ { \"offset\" : 3 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"timestamp\" : 1583488726267 } ], \"skipped\" : [] } The key path option argument is a Jmespath expression that is executed against each input message. The result of the expression will be used as the record's key. It is also possible to do the same to set the messages timestamp with the --ts-path . Use zoe topics produce --help for more information.","title":"Write data from stdin"},{"location":"basics/produce/#write-data-from-a-json-file","text":"The other way to write data into Kafka with zoe is to use a json file. The following example uses a sample dataset downloaded from the cats facts API . You can inspect the sample in the repository at guides/simple/data.json . Let's write this json file into the input topic. command zoe -v topics produce --topic input --from-file docs/guides/simple/data.json logs 2020-03-06 11:07:18 INFO zoe: loading config from url : file:~/.zoe/config/default.yml 2020-03-06 11:07:18 INFO zoe: producing '212' records to topic 'input-topic' 2020-03-06 11:07:18 INFO AppInfoParser: Kafka version: 2.3.1 2020-03-06 11:07:18 INFO AppInfoParser: Kafka commitId: 18a913733fb71c01 2020-03-06 11:07:18 INFO AppInfoParser: Kafka startTimeMs: 1583489238910 2020-03-06 11:07:19 INFO Metadata: [Producer clientId=producer-1] Cluster ID: y50BSUG2RzipAYoKITJuQg 2020-03-06 11:07:19 INFO KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. output { \"produced\" : [ { \"offset\" : 4 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"timestamp\" : 1583489239047 }, { \"offset\" : 5 , \"partition\" : 0 , \"topic\" : \"input-topic\" , \"timestamp\" : 1583489239054 }, ... ], \"skipped\" : [] } You can know more about the produce command with zoe topics produce --help .","title":"Write data from a json file"},{"location":"basics/produce/#writing-data-in-streaming-mode","text":"In all the examples above, zoe was expecting a valid json array as input. This is because zoe parses the input data (from stdin or from a file) entirely before sending it to Kafka. This is the default behavior of the produce command. This behavior is not suitable when streaming data to the zoe produce command from a continuous data source (ex. a tcp connection or an http command) because: The data is usually not formatted as a Json Array. It's often rather a json per line. We do not want zoe to buffer all the data internally before sending it. For these cases, Zoe supports a streaming mode by setting a --streaming flag. In this mode : Zoe expects one valid json object per line (separated by line breaks) Zoe will keep listening to the input stream continuously. It needs to be stopped using a stop signal ( Ctrl-C ). Streaming mode can be enabled like the following : command echo '{\"msg\": \"hello world\"}' | zoe -v --cluster local topics produce --topic input --from-stdin --streaming","title":"Writing data in streaming mode"},{"location":"configuration/chain/","text":"Configuration loading chain Zoe has a complex and powerful configuration override chain that makes it highly configurable. Zoe configuration properties are considered in the following order (in a decreasing order of priority): ZOE_CONFIG_OVERRIDE_{env} environment variable. ZOE_CONFIG_OVERRIDE environment variable. ~/.zoe/config/{env}.yml or .json file ~/.zoe/config/common.yml or .json file The 2 first environment variables must contain the configuration (or a subset) in json format. The final zoe configuration will be the result of merging all the above configuration values in the increasing level priority. The special common.yml configuration file is supposed to contain configuration values that are common to all the environments. Registered expressions or secrets providers are a good use case.","title":"Configuration loading chain"},{"location":"configuration/chain/#configuration-loading-chain","text":"Zoe has a complex and powerful configuration override chain that makes it highly configurable. Zoe configuration properties are considered in the following order (in a decreasing order of priority): ZOE_CONFIG_OVERRIDE_{env} environment variable. ZOE_CONFIG_OVERRIDE environment variable. ~/.zoe/config/{env}.yml or .json file ~/.zoe/config/common.yml or .json file The 2 first environment variables must contain the configuration (or a subset) in json format. The final zoe configuration will be the result of merging all the above configuration values in the increasing level priority. The special common.yml configuration file is supposed to contain configuration values that are common to all the environments. Registered expressions or secrets providers are a good use case.","title":"Configuration loading chain"},{"location":"configuration/environments/","text":"Environments Zoe allows us to separate clusters configuration into multiple environments. This can be achieved by creating a dedicated yaml file for each environment in zoe's configuration directory ~/.zoe/config . A typical use case is when dealing with a development, a staging and a production kafka cluster. In this case, we can create 3 configuration files : ~/.zoe/config \u251c\u2500\u2500 dev.yml \u251c\u2500\u2500 staging.yml \u2514\u2500\u2500 prod.yml We can then refer to a specific environment using --env or -e option : zoe --env staging -c my-kafka topics consume input -n 10 In this case, Zoe will use the ~/.zoe/config/staging.yml configuration file. By default, when --env is not specified, zoe will use a default environment called default and thus uses the ~/.zoe/config/default.yml . Choosing an environment can also be done using an environment variable called ZOE_ENV : export ZOE_ENV = pro zoe -c my-kafka topics consume input -n 10","title":"Environments"},{"location":"configuration/environments/#environments","text":"Zoe allows us to separate clusters configuration into multiple environments. This can be achieved by creating a dedicated yaml file for each environment in zoe's configuration directory ~/.zoe/config . A typical use case is when dealing with a development, a staging and a production kafka cluster. In this case, we can create 3 configuration files : ~/.zoe/config \u251c\u2500\u2500 dev.yml \u251c\u2500\u2500 staging.yml \u2514\u2500\u2500 prod.yml We can then refer to a specific environment using --env or -e option : zoe --env staging -c my-kafka topics consume input -n 10 In this case, Zoe will use the ~/.zoe/config/staging.yml configuration file. By default, when --env is not specified, zoe will use a default environment called default and thus uses the ~/.zoe/config/default.yml . Choosing an environment can also be done using an environment variable called ZOE_ENV : export ZOE_ENV = pro zoe -c my-kafka topics consume input -n 10","title":"Environments"},{"location":"configuration/init/","text":"Config initialization From scratch The simplest way to initialize zoe configuration from scratch is to use the zoe CLI: command zoe config init This will create a default.yml file in ~/.zoe/config by default. From an existing local directory If you already have locally a directory that contains ready to use configuration files you can use: command zoe config init --from local --path /path/to/config This will copy the yaml files from the target directory to ~/.zoe/config . From a git repository You can also copy the configuration from an existing git repository. For example, to copy the zoe config used in the guides in the official repository: command zoe config init --from git --url 'https://github.com/adevinta/zoe.git' --dir docs/guides/simple/config","title":"Config initialization"},{"location":"configuration/init/#config-initialization","text":"","title":"Config initialization"},{"location":"configuration/init/#from-scratch","text":"The simplest way to initialize zoe configuration from scratch is to use the zoe CLI: command zoe config init This will create a default.yml file in ~/.zoe/config by default.","title":"From scratch"},{"location":"configuration/init/#from-an-existing-local-directory","text":"If you already have locally a directory that contains ready to use configuration files you can use: command zoe config init --from local --path /path/to/config This will copy the yaml files from the target directory to ~/.zoe/config .","title":"From an existing local directory"},{"location":"configuration/init/#from-a-git-repository","text":"You can also copy the configuration from an existing git repository. For example, to copy the zoe config used in the guides in the official repository: command zoe config init --from git --url 'https://github.com/adevinta/zoe.git' --dir docs/guides/simple/config","title":"From a git repository"},{"location":"configuration/overview/","text":"Configuring zoe Zoe relies on a pre-set configuration to infer most of the parameters at usage time when interacting with a cluster using the CLI. This is one of the key points that makes zoe easy to use. Zoe loads its configuration from a variety of sources. It also has a complex override chain that makes it highly configurable even in the context of containers. In this guide, we will discover the following points: Config initialization : We will start with how to initialize zoe configuration files by either creating them from scratch or loading them from an existing source. Environments : We will see how zoe allows us to separate clusters' configuration into multiple environments and how we can select the appropriate environment when using zoe. Configuration loading chain : We will then tackle zoe's complex configuration loading chain and how configuration values can be overridden with environment variables. Configuration reference : This section contains the list of all possible values in zoe's configuration file.","title":"Overview"},{"location":"configuration/overview/#configuring-zoe","text":"Zoe relies on a pre-set configuration to infer most of the parameters at usage time when interacting with a cluster using the CLI. This is one of the key points that makes zoe easy to use. Zoe loads its configuration from a variety of sources. It also has a complex override chain that makes it highly configurable even in the context of containers. In this guide, we will discover the following points: Config initialization : We will start with how to initialize zoe configuration files by either creating them from scratch or loading them from an existing source. Environments : We will see how zoe allows us to separate clusters' configuration into multiple environments and how we can select the appropriate environment when using zoe. Configuration loading chain : We will then tackle zoe's complex configuration loading chain and how configuration values can be overridden with environment variables. Configuration reference : This section contains the list of all possible values in zoe's configuration file.","title":"Configuring zoe"},{"location":"configuration/reference/","text":"Configuration reference # Clusters definition clusters : # Cluster alias (used with the --cluster option to refer to this cluster config) subito : # Kafka clients properties that will be injected to all Kafka clients by Zoe at runtime # For more information on available properties : # - consumer : https://kafka.apache.org/documentation/#consumerconfigs # - producer : https://kafka.apache.org/documentation/#producerconfigs # This section can contain secrets. props : bootstrap.servers : my-kafka.example.com:9092 key.deserializer : org.apache.kafka.common.serialization.StringDeserializer value.deserializer : io.confluent.kafka.serializers.KafkaAvroDeserializer sasl.jaas.config : secret:JAAS_CONFIG security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 # Schema registry address of the cluster. Will be used by zoe when interacting with the schema registry (schemas list, describe and deploy command) # When this property is set, zoe automatically injects the property 'schema.registry.url' into the Kafka clients props. registry : https://my-registry.example.com # A list of consumer groups keyed by their alias. Useful when using the 'zoe groups' command to interact with consumer groups. # When you need to refer to a consumer group, you can use the alias instead of the full name of the consumer group. groups : my-group : long-consumer-group-name # Topics config section. Basically a dictionary with the topic's alias as the key and the topic's configuration as the value. # The topic's configuration basically includes : # - name: the full name of the topic # - subject (optional) : the subject name of the avro schema of the topic. topics : topic-alias : name : full-name-of-the-topic-in-the-cluster subject : subject-name-of-the-topic # Runners configuration runners : # Default runner to use when the '-r' option is not specified default : lambda # Runners configuration config : # The kubernetes runner configuration kubernetes : # Kubernetes context to use context : mu-kube-context # Namespace to use namespace : env-staging # Whether to delete the pods after completion deletePodAfterCompletion : true # Number of CPUs cpu : \"1\" # Memory limit memory : \"512M\" # Timeout of the commands timeoutMs : 300000 # The lambda runner configuration lambda : # This section sets the deployment context of the lambda function. Mainly used with the 'zoe lambda deploy' command. deploy : subnets : [ \"subnet-xxxxxx\" ] securityGroups : [ \"sg-yyyyy\" ] memory : 512 timeout : 500 # Credentials provider for the lambda client. More credentials type can be provided. # Cf. The runners section in The advanced usage guide. credentials : type : \"profile\" name : \"my-profile\" # AWS Region for the lambda client awsRegion : eu-west-1 # Registered expressions section # Cf. The registered expression guide in the Advanced usage section. expressions : short_id : \"ends_with(id, '{{ value }}')\" # Secrets provider # Cf. The secrets provider guide in the Advanced usage section. secrets : provider : \"strongbox\" region : \"eu-west-1\" group : my.group","title":"Reference"},{"location":"configuration/reference/#configuration-reference","text":"# Clusters definition clusters : # Cluster alias (used with the --cluster option to refer to this cluster config) subito : # Kafka clients properties that will be injected to all Kafka clients by Zoe at runtime # For more information on available properties : # - consumer : https://kafka.apache.org/documentation/#consumerconfigs # - producer : https://kafka.apache.org/documentation/#producerconfigs # This section can contain secrets. props : bootstrap.servers : my-kafka.example.com:9092 key.deserializer : org.apache.kafka.common.serialization.StringDeserializer value.deserializer : io.confluent.kafka.serializers.KafkaAvroDeserializer sasl.jaas.config : secret:JAAS_CONFIG security.protocol : SASL_SSL sasl.mechanism : SCRAM-SHA-256 # Schema registry address of the cluster. Will be used by zoe when interacting with the schema registry (schemas list, describe and deploy command) # When this property is set, zoe automatically injects the property 'schema.registry.url' into the Kafka clients props. registry : https://my-registry.example.com # A list of consumer groups keyed by their alias. Useful when using the 'zoe groups' command to interact with consumer groups. # When you need to refer to a consumer group, you can use the alias instead of the full name of the consumer group. groups : my-group : long-consumer-group-name # Topics config section. Basically a dictionary with the topic's alias as the key and the topic's configuration as the value. # The topic's configuration basically includes : # - name: the full name of the topic # - subject (optional) : the subject name of the avro schema of the topic. topics : topic-alias : name : full-name-of-the-topic-in-the-cluster subject : subject-name-of-the-topic # Runners configuration runners : # Default runner to use when the '-r' option is not specified default : lambda # Runners configuration config : # The kubernetes runner configuration kubernetes : # Kubernetes context to use context : mu-kube-context # Namespace to use namespace : env-staging # Whether to delete the pods after completion deletePodAfterCompletion : true # Number of CPUs cpu : \"1\" # Memory limit memory : \"512M\" # Timeout of the commands timeoutMs : 300000 # The lambda runner configuration lambda : # This section sets the deployment context of the lambda function. Mainly used with the 'zoe lambda deploy' command. deploy : subnets : [ \"subnet-xxxxxx\" ] securityGroups : [ \"sg-yyyyy\" ] memory : 512 timeout : 500 # Credentials provider for the lambda client. More credentials type can be provided. # Cf. The runners section in The advanced usage guide. credentials : type : \"profile\" name : \"my-profile\" # AWS Region for the lambda client awsRegion : eu-west-1 # Registered expressions section # Cf. The registered expression guide in the Advanced usage section. expressions : short_id : \"ends_with(id, '{{ value }}')\" # Secrets provider # Cf. The secrets provider guide in the Advanced usage section. secrets : provider : \"strongbox\" region : \"eu-west-1\" group : my.group","title":"Configuration reference"},{"location":"guides/overview/","text":"Tutorials The zoe repository provides a bunch of Hands-on guides that walks you through the most useful concepts of zoe. These guides are self contained and do not require extra infrastructure other than you own machine. A simple example : This tutorial walks you through the most basic functionalities of zoe. It makes use of a dataset downloaded from the Cat Facts API to explore reading and writing data from / into kafka using zoe. Zoe with Avro : This tutorial shows zoe support for avro and the schema registry. If you are new to zoe, start with the simple example above. Zoe with Kubernetes : This tutorial shows you how you can offload consumption and interactions to kubernetes pods for parallelism.","title":"Overview"},{"location":"guides/overview/#tutorials","text":"The zoe repository provides a bunch of Hands-on guides that walks you through the most useful concepts of zoe. These guides are self contained and do not require extra infrastructure other than you own machine. A simple example : This tutorial walks you through the most basic functionalities of zoe. It makes use of a dataset downloaded from the Cat Facts API to explore reading and writing data from / into kafka using zoe. Zoe with Avro : This tutorial shows zoe support for avro and the schema registry. If you are new to zoe, start with the simple example above. Zoe with Kubernetes : This tutorial shows you how you can offload consumption and interactions to kubernetes pods for parallelism.","title":"Tutorials"},{"location":"guides/avro/guide/","text":"Zoe with Avro This tutorial shows zoe support for avro and the schema registry. If you are new to zoe, start with the basic scenario . What you will learn In this tutorial, you will learn the following aspects of zoe: Configure zoe to use against avro topics. Listing avro schemas registered in the schema registry Deploying .avdl avro schemas Writing json data into kafka topics using avro Reading avro data from a topic Prerequisites For this guide you will need: Zoe (install instructions are here ) Docker and docker-compose (that we will use to spin up Kafka) Prepare the environment Clone the repository : git clone https://github.com/adevinta/zoe.git Go to the directory: docs/guides/avro Spin up the kafka cluster: docker-compose up -d . Check all the containers are up: command docker-compose ps output Name Command State Ports ------------------------------------------------------------------------------------------------ broker /etc/confluent/docker/run Up 0.0.0.0:29092->29092/tcp, 0.0.0.0:9092->9092/tcp zookeeper /etc/confluent/docker/run Up 0.0.0.0:2181->2181/tcp, 2888/tcp, 3888/tcp Configure zoe Now, we need to configure zoe to make it aware of the cluster. Create a new file called default.yml inside zoe's config directory ( ~/.zoe/config by default) and fill it with the following content: ~/.zoe/config/default.yml clusters : default : props : bootstrap.servers : \"localhost:29092\" key.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer : \"io.confluent.kafka.serializers.KafkaAvroDeserializer\" key.serializer : \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer : \"io.confluent.kafka.serializers.KafkaAvroSerializer\" registry : \"http://localhost:8081\" topics : input : name : \"input-events-topic\" subject : \"input-events-topic-value\" runners : default : \"local\" The basic scenario guide explains most of the configuration above. The relevant parts for this guide are the following: In the default cluster's configuration, notice the registry key. This defines the address of the schema registry where avro schemas are stored. When we define this key, zoe automatically adds the schema.registry.url property to the consumers and producers and there is no need to supply it manually. Notice also that we are using the KafkaAvroDeserializer and KafkaAvroSerializer in the cluster's client properties. In the topics section, besides the name of the topic, we define the subject name of the schema associated with the topic. This is an optional parameter that is only used when producing data into the topic so that zoe serializes the data using the right Avro schema. You can also override it with the --subject option in the topics produce command. If you don't want to write this configuration by hand, you can copy the one already present in the repository by using the following command: command zoe config init --from git --url https://github.com/adevinta/zoe --dir docs/guides/avro/config Ensure zoe is now aware of the cluster by executing the following command: command zoe --silent -o table config clusters list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 cluster \u2502 brokers \u2502 registry \u2502 topics \u2502 groups \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 default \u2502 localhost:29092 \u2502 http://localhost:8081 \u2502 alias: \"input\" name: \"input-events-topic\" \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Now, you're ready to use zoe to interact with the local kafka cluster. This cluster is available in the provided config above under the local alias (take a look at zoe-config/default.yml ) Creating the Cat Facts Avro schema with zoe In this guide we will be using again the cat facts data that we used in the basic scenario guide . This time though we will serialize this data in Avro. So the first step is to create the Avro schema representing this data! The Avro schema representing the Cat Facts dataset is provided in the repository . It is written in .avdl which is a format that describes avro schemas in an expressive and intuitive way. You can know more about avdl here Usually, to deploy an .avdl file into the schema registry we first need to compile it down into an .avsc file before posting it to the registry. With zoe, this compilation step is done automatically for us. In fact, zoe handles .avdl files as seamlessly as .avsc files. command # deploy the cat facts schema from the zoe schemas deploy \\ --avdl \\ --from-file schema.avdl \\ --name CatFact \\ --strategy topic \\ --topic input \\ --suffix value output 2020-06-28 09:38:29 INFO zoe: loading config from url : file:/tmp/zoe-avro/default.yml {\"type\":\"actual\",\"id\":1,\"subject\":\"input-events-topic-value\"} Ensure our schema is successfully registered by listing the topics from the schema registry: command zoe --silent -o table schemas list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 subjects \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 input-events-topic-value \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Describe the schema using: command zoe --silent -o table schemas describe input-events-topic-value output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 subject \u2502 versions \u2502 latest \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 input-events-topic-value \u2502 1 \u2502 {\"type\":\"record\",\"name\":\"CatFact\",\"namespace\":\"com.adevinta.oss.zoe.guides\",\"fields\":[...]} \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Producing data No that we have the Cat Facts Avro schema registered, let's produce some cat facts from the data.json file in avro: command zoe topics produce --topic input --from-file data.json --subject input-events-topic-value output 2020-06-28 09:48:11 INFO zoe: loading config from url : file:/tmp/zoe-avro/default.yml 2020-06-28 09:48:11 INFO zoe: producing '211' records to topic 'input-events-topic' 2020-06-28 09:48:12 INFO AppInfoParser: Kafka version: 5.5.0-ccs 2020-06-28 09:48:12 INFO AppInfoParser: Kafka commitId: 785a156634af5f7e 2020-06-28 09:48:12 INFO AppInfoParser: Kafka startTimeMs: 1593330492339 2020-06-28 09:48:12 INFO Metadata: [Producer clientId=producer-1] Cluster ID: pD8UlIdIQkyn40_NW_-f4w 2020-06-28 09:48:12 INFO KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 produced \u2502 skipped \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 offset: 43 partition: 0 topic: \"input-events-topic\" timestamp: 1593330492564 \u2502 \u2502 \u2502 offset: 31 partition: 2 topic: \"input-events-topic\" timestamp: 1593330492591 \u2502 \u2502 \u2502 offset: 47 partition: 1 topic: \"input-events-topic\" timestamp: 1593330492591 \u2502 \u2502 \u2502 offset: 48 partition: 1 topic: \"input-events-topic\" timestamp: 1593330492591 \u2502 \u2502 \u2502 offset: 50 partition: 4 topic: \"input-events-topic\" timestamp: 1593330492591 \u2502 \u2502 \u2502 offset: 86 partition: 3 topic: \"input-events-topic\" timestamp: 1593330492619 \u2502 \u2502 | ... | | \u2502 offset: 89 partition: 1 topic: \"input-events-topic\" timestamp: 1593330492619 \u2502 \u2502 \u2502 offset: 96 partition: 0 topic: \"input-events-topic\" timestamp: 1593330492619 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 We could have omitted the --subject option as we have already told zoe about that topic's subject name in the configuration (see above). When zoe sees that we are using the KafkaAvroDeserializer , it automatically tries to convert data from json into Avro Generic Records before supplying them to the producer. Reading data Reading data from an Avro topic with zoe is really no different from reading a Json topic. Zoe seemlessly transforms avro data into json and zoe can apply the jmespath filters with --filter as with json data. In fact the following command works exactly the same in both this guide and the Basic scenario one: command # filter out Kasimir's data zoe --silent -o table topics consume input \\ -n 10 \\ --from 'PT1h' \\ --query '{id: _id, type: type, user: user, upvotes: upvotes}' \\ --filter \"user.name.first == 'Kasimir'\" output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 id \u2502 type \u2502 user \u2502 upvotes \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008d00aac31001185ed0f \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00b3a0aac31001185ed20 \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a090aac31001185ed16 \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008d00aac31001185ed0f \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00bdb0aac31001185edfd \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Zoe with Avro"},{"location":"guides/avro/guide/#zoe-with-avro","text":"This tutorial shows zoe support for avro and the schema registry. If you are new to zoe, start with the basic scenario .","title":"Zoe with Avro"},{"location":"guides/avro/guide/#what-you-will-learn","text":"In this tutorial, you will learn the following aspects of zoe: Configure zoe to use against avro topics. Listing avro schemas registered in the schema registry Deploying .avdl avro schemas Writing json data into kafka topics using avro Reading avro data from a topic","title":"What you will learn"},{"location":"guides/avro/guide/#prerequisites","text":"For this guide you will need: Zoe (install instructions are here ) Docker and docker-compose (that we will use to spin up Kafka)","title":"Prerequisites"},{"location":"guides/avro/guide/#prepare-the-environment","text":"Clone the repository : git clone https://github.com/adevinta/zoe.git Go to the directory: docs/guides/avro Spin up the kafka cluster: docker-compose up -d . Check all the containers are up: command docker-compose ps output Name Command State Ports ------------------------------------------------------------------------------------------------ broker /etc/confluent/docker/run Up 0.0.0.0:29092->29092/tcp, 0.0.0.0:9092->9092/tcp zookeeper /etc/confluent/docker/run Up 0.0.0.0:2181->2181/tcp, 2888/tcp, 3888/tcp","title":"Prepare the environment"},{"location":"guides/avro/guide/#configure-zoe","text":"Now, we need to configure zoe to make it aware of the cluster. Create a new file called default.yml inside zoe's config directory ( ~/.zoe/config by default) and fill it with the following content: ~/.zoe/config/default.yml clusters : default : props : bootstrap.servers : \"localhost:29092\" key.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer : \"io.confluent.kafka.serializers.KafkaAvroDeserializer\" key.serializer : \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer : \"io.confluent.kafka.serializers.KafkaAvroSerializer\" registry : \"http://localhost:8081\" topics : input : name : \"input-events-topic\" subject : \"input-events-topic-value\" runners : default : \"local\" The basic scenario guide explains most of the configuration above. The relevant parts for this guide are the following: In the default cluster's configuration, notice the registry key. This defines the address of the schema registry where avro schemas are stored. When we define this key, zoe automatically adds the schema.registry.url property to the consumers and producers and there is no need to supply it manually. Notice also that we are using the KafkaAvroDeserializer and KafkaAvroSerializer in the cluster's client properties. In the topics section, besides the name of the topic, we define the subject name of the schema associated with the topic. This is an optional parameter that is only used when producing data into the topic so that zoe serializes the data using the right Avro schema. You can also override it with the --subject option in the topics produce command. If you don't want to write this configuration by hand, you can copy the one already present in the repository by using the following command: command zoe config init --from git --url https://github.com/adevinta/zoe --dir docs/guides/avro/config Ensure zoe is now aware of the cluster by executing the following command: command zoe --silent -o table config clusters list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 cluster \u2502 brokers \u2502 registry \u2502 topics \u2502 groups \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 default \u2502 localhost:29092 \u2502 http://localhost:8081 \u2502 alias: \"input\" name: \"input-events-topic\" \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Now, you're ready to use zoe to interact with the local kafka cluster. This cluster is available in the provided config above under the local alias (take a look at zoe-config/default.yml )","title":"Configure zoe"},{"location":"guides/avro/guide/#creating-the-cat-facts-avro-schema-with-zoe","text":"In this guide we will be using again the cat facts data that we used in the basic scenario guide . This time though we will serialize this data in Avro. So the first step is to create the Avro schema representing this data! The Avro schema representing the Cat Facts dataset is provided in the repository . It is written in .avdl which is a format that describes avro schemas in an expressive and intuitive way. You can know more about avdl here Usually, to deploy an .avdl file into the schema registry we first need to compile it down into an .avsc file before posting it to the registry. With zoe, this compilation step is done automatically for us. In fact, zoe handles .avdl files as seamlessly as .avsc files. command # deploy the cat facts schema from the zoe schemas deploy \\ --avdl \\ --from-file schema.avdl \\ --name CatFact \\ --strategy topic \\ --topic input \\ --suffix value output 2020-06-28 09:38:29 INFO zoe: loading config from url : file:/tmp/zoe-avro/default.yml {\"type\":\"actual\",\"id\":1,\"subject\":\"input-events-topic-value\"} Ensure our schema is successfully registered by listing the topics from the schema registry: command zoe --silent -o table schemas list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 subjects \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 input-events-topic-value \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Describe the schema using: command zoe --silent -o table schemas describe input-events-topic-value output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 subject \u2502 versions \u2502 latest \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 input-events-topic-value \u2502 1 \u2502 {\"type\":\"record\",\"name\":\"CatFact\",\"namespace\":\"com.adevinta.oss.zoe.guides\",\"fields\":[...]} \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Creating the Cat Facts Avro schema with zoe"},{"location":"guides/avro/guide/#producing-data","text":"No that we have the Cat Facts Avro schema registered, let's produce some cat facts from the data.json file in avro: command zoe topics produce --topic input --from-file data.json --subject input-events-topic-value output 2020-06-28 09:48:11 INFO zoe: loading config from url : file:/tmp/zoe-avro/default.yml 2020-06-28 09:48:11 INFO zoe: producing '211' records to topic 'input-events-topic' 2020-06-28 09:48:12 INFO AppInfoParser: Kafka version: 5.5.0-ccs 2020-06-28 09:48:12 INFO AppInfoParser: Kafka commitId: 785a156634af5f7e 2020-06-28 09:48:12 INFO AppInfoParser: Kafka startTimeMs: 1593330492339 2020-06-28 09:48:12 INFO Metadata: [Producer clientId=producer-1] Cluster ID: pD8UlIdIQkyn40_NW_-f4w 2020-06-28 09:48:12 INFO KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 produced \u2502 skipped \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 offset: 43 partition: 0 topic: \"input-events-topic\" timestamp: 1593330492564 \u2502 \u2502 \u2502 offset: 31 partition: 2 topic: \"input-events-topic\" timestamp: 1593330492591 \u2502 \u2502 \u2502 offset: 47 partition: 1 topic: \"input-events-topic\" timestamp: 1593330492591 \u2502 \u2502 \u2502 offset: 48 partition: 1 topic: \"input-events-topic\" timestamp: 1593330492591 \u2502 \u2502 \u2502 offset: 50 partition: 4 topic: \"input-events-topic\" timestamp: 1593330492591 \u2502 \u2502 \u2502 offset: 86 partition: 3 topic: \"input-events-topic\" timestamp: 1593330492619 \u2502 \u2502 | ... | | \u2502 offset: 89 partition: 1 topic: \"input-events-topic\" timestamp: 1593330492619 \u2502 \u2502 \u2502 offset: 96 partition: 0 topic: \"input-events-topic\" timestamp: 1593330492619 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 We could have omitted the --subject option as we have already told zoe about that topic's subject name in the configuration (see above). When zoe sees that we are using the KafkaAvroDeserializer , it automatically tries to convert data from json into Avro Generic Records before supplying them to the producer.","title":"Producing data"},{"location":"guides/avro/guide/#reading-data","text":"Reading data from an Avro topic with zoe is really no different from reading a Json topic. Zoe seemlessly transforms avro data into json and zoe can apply the jmespath filters with --filter as with json data. In fact the following command works exactly the same in both this guide and the Basic scenario one: command # filter out Kasimir's data zoe --silent -o table topics consume input \\ -n 10 \\ --from 'PT1h' \\ --query '{id: _id, type: type, user: user, upvotes: upvotes}' \\ --filter \"user.name.first == 'Kasimir'\" output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 id \u2502 type \u2502 user \u2502 upvotes \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008d00aac31001185ed0f \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00b3a0aac31001185ed20 \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a090aac31001185ed16 \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008d00aac31001185ed0f \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00bdb0aac31001185edfd \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Reading data"},{"location":"guides/kubernetes/guide/","text":"Zoe with kubernetes In this tutorial, we will learn how to use Zoe with the Kubernetes runner. We will start by spinning up a simple one node Kafka cluster in Kubernetes, and then we will use zoe to interact with it using the kubernetes runner. With this runner, zoe spins up consumers / producers as pods, and the results will be forwarded to the caller's machine. This is useful in many scenarios. Here are some examples: When the Kafka cluster is not reachable from our local machine and is only reachable from within the Kubernetes cluster. If we want to parallelize topics consumption over multiple pods (see an example in this guide). Prerequisites zoe (Install instructions here ) kubectl and a working kubernetes cluster (cf. below for more instructions on how to install a kubernetes cluster) This section assumes you have already gone through the Basic scenario guide and will not explain the basics that were already covered there. Prepare the environment Kubernetes setup In this tutorial, you will need kubectl and a working kubernetes cluster that you can use to test Zoe. Several solutions exist to install a kubernetes cluster locally. The most common ones are: Minikube , Kind , MicroK8s and k3s . No matter how you installed your local cluster (or if you are using a remote one), make sure your current context in your kube config file is pointing to that cluster (you can explicitly configure zoe to use a specific context and a specific namespace but for the sake of simplicity we will leave this part out of this tutorial). You can ensure that the kubernetes cluster is reachable and is pointing to the right context by using: command kubectl cluster-info output Kubernetes master is running at https://127.0.0.1:16443 CoreDNS is running at https://127.0.0.1:16443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'. The output may be different on your machine. Setup Kafka Ready to use manifest files to install a single node Kafka cluster on kubernetes are provided in the repository . Let's use them: Clone the repository: git clone https://github.com/adevinta/zoe.git Go to the kubernetes guide directory: cd zoe/docs/guides/kubernetes Apply the manifests: kubectl apply --prune --selector='context=zoe-demo' -f resources This will install a Zookeeper and a Kafka node. You can check the readiness of the pods using: command kubectl get all -l context = zoe-demo output NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/broker ClusterIP 10.152.183.151 <none> 9092/TCP,29092/TCP 44m service/zookeeper ClusterIP 10.152.183.157 <none> 2181/TCP 44m NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/broker 1/1 1 1 44m deployment.apps/zookeeper 1/1 1 1 44m Configure zoe Create a new file named k8s.yml in zoe's configuration directory ( ~/.zoe/config by default) and fill it with the following content: ~/.zoe/config/k8s.yml clusters: default: props: bootstrap.servers: \"broker:9092\" key.deserializer: \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer: \"org.apache.kafka.common.serialization.StringDeserializer\" key.serializer: \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer: \"org.apache.kafka.common.serialization.ByteArraySerializer\" runners: default: \"kubernetes\" The configuration above defines the kubernetes runner as the default one. When using this runner with no additional configuration, zoe targets the kubernetes cluster pointed at by the current context (cf. kubectl cluster-info to know which cluster you are targeting). It is possible to point to a specific context. To know more, visit the kubernetes runner dedicated section . Notice the bootstrap.servers property above pointing to broker:9092 . We are using the actual broker Service name defined in kubernetes. This DNS name is only visible inside the kubernetes cluster. This is possible because as explained above, the kubernetes runner spins up the consumers, producers and all the kafka clients as pods inside the cluster. So the internal kubernetes DNS names are visible and usable. If you don't want to write this configuration by hand, you can copy it directly from the repository by using: command zoe config init --from git --url https://github.com/adevinta/zoe --dir docs/guides/kubernetes/config Ensure zoe is aware about our new configuration: command zoe -e k8s -o table config clusters list output 2020-06-27 20:14:05 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 cluster \u2502 brokers \u2502 registry \u2502 topics \u2502 groups \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 default \u2502 broker:9092 \u2502 null \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Notice our use of -e k8s in the above command. Zoe supports having multiple configuration files inside its config directory representing different environments. To point to a specific environment, we use the -e <env name> ( <env name> is the name of the configuration file without the extension). When no environment is specified, zoe uses the environment called default . Zoe is now ready to be used against our cluster! Creating the topic Create a topic called cat-facts-topic (This first run will download the zoe docker image so expect it to be slower): command zoe -e k8s topics create cat-facts-topic --partitions 10 output 2020-06-27 20 : 54 : 13 INFO zoe: loading config from url : file:~/.zoe/config/k 8 s.yml 2020-06-27 20 : 54 : 14 INFO zoe: creating topic: cat-facts-topic { \"done\" : true } Ensure our topic is created: command zoe -e k8s -o table topics list output 2020-06-27 20 : 56 : 47 INFO zoe: loading config from url : file:~/.zoe/config/k 8 s.yml 2020-06-27 20 : 56 : 48 INFO zoe: requesting topics... \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 value \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \"cat-facts-topic\" \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 You can higher up the logging verbosity to see how zoe launches pods and watches for changes: command zoe -vv -e k8s -o table topics list output 2020-06-27 21:21:39 DEBUG zoe: trying to fetch config url for env 'common' with : EnvVarsConfigUrlProvider 2020-06-27 21:21:39 DEBUG zoe: trying to fetch config url for env 'common' with : LocalConfigDirUrlProvider 2020-06-27 21:21:39 DEBUG zoe: trying to fetch config url for env 'k8s' with : EnvVarsConfigUrlProvider 2020-06-27 21:21:39 DEBUG zoe: trying to fetch config url for env 'k8s' with : LocalConfigDirUrlProvider 2020-06-27 21:21:39 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-27 21:21:39 DEBUG Config: Trying to configure client from Kubernetes config... 2020-06-27 21:21:39 DEBUG Config: Found for Kubernetes config at: [/home/wlezzar/.kube/config]. 2020-06-27 21:21:40 INFO zoe: requesting topics... 2020-06-27 21:21:40 DEBUG WatchConnectionManager: Connecting websocket ... io.fabric8.kubernetes.client.dsl.internal.WatchConnectionManager@66b71771 2020-06-27 21:21:40 DEBUG WatchConnectionManager: WebSocket successfully opened 2020-06-27 21:21:40 DEBUG zoe: received event 'ADDED' with pod : {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2020-06-27T19:21:40Z\",\"labels\":{\"owner\":\"zoe\",\"runnerId\":\"53ec2205-897e-4cc0-b1eb-07ea091f14c0\"},\"name\":\"zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"namespace\":\"default\",\"resourceVersion\":\"1513249\",\"selfLink\":\"/api/v1/namespaces/default/pods/zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"uid\":\"a8dea11a-a15d-4855-bc7f-ecb7ec7c78d6\"},\"spec\":{\"containers\":[{\"args\":[\"{\\\"function\\\":\\\"topics\\\",\\\"payload\\\":{\\\"props\\\":{\\\"bootstrap.servers\\\":\\\"broker:9092\\\",\\\"key.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"value.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"key.serializer\\\":\\\"org.apache.kafka.common.serialization.StringSerializer\\\",\\\"value.serializer\\\":\\\"org.apache.kafka.common.serialization.ByteArraySerializer\\\"}}}\",\"/output/response.txt\"],\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imagePullPolicy\":\"Always\",\"name\":\"zoe\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"512M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]},{\"args\":[\"sh\",\"-c\",\"while [ -f /output/response.txt ]; do sleep 2; done\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"tailer\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"24M\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"24M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"initContainers\":[{\"command\":[\"touch\",\"/output/response.txt\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"create-output-file\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"nodeName\":\"wlezzar-thinkpad-t460p\",\"priority\":0,\"restartPolicy\":\"Never\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":300},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":300}],\"volumes\":[{\"emptyDir\":{},\"name\":\"output-volume\"},{\"name\":\"default-token-v9k66\",\"secret\":{\"defaultMode\":420,\"secretName\":\"default-token-v9k66\"}}]},\"status\":{\"conditions\":[{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with incomplete status: [create-output-file]\",\"reason\":\"ContainersNotInitialized\",\"status\":\"False\",\"type\":\"Initialized\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with unready status: [zoe tailer]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"Ready\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with unready status: [zoe tailer]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"ContainersReady\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"status\":\"True\",\"type\":\"PodScheduled\"}],\"containerStatuses\":[{\"image\":\"alpine:3.9.5\",\"imageID\":\"\",\"lastState\":{},\"name\":\"tailer\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}},{\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imageID\":\"\",\"lastState\":{},\"name\":\"zoe\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}}],\"hostIP\":\"192.168.1.16\",\"initContainerStatuses\":[{\"image\":\"alpine:3.9.5\",\"imageID\":\"\",\"lastState\":{},\"name\":\"create-output-file\",\"ready\":false,\"restartCount\":0,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}}],\"phase\":\"Pending\",\"qosClass\":\"Burstable\",\"startTime\":\"2020-06-27T19:21:40Z\"}} 2020-06-27 21:21:40 DEBUG zoe: pod is spinning up... 2020-06-27 21:21:42 DEBUG zoe: received event 'MODIFIED' with pod : {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2020-06-27T19:21:40Z\",\"labels\":{\"owner\":\"zoe\",\"runnerId\":\"53ec2205-897e-4cc0-b1eb-07ea091f14c0\"},\"name\":\"zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"namespace\":\"default\",\"resourceVersion\":\"1513256\",\"selfLink\":\"/api/v1/namespaces/default/pods/zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"uid\":\"a8dea11a-a15d-4855-bc7f-ecb7ec7c78d6\"},\"spec\":{\"containers\":[{\"args\":[\"{\\\"function\\\":\\\"topics\\\",\\\"payload\\\":{\\\"props\\\":{\\\"bootstrap.servers\\\":\\\"broker:9092\\\",\\\"key.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"value.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"key.serializer\\\":\\\"org.apache.kafka.common.serialization.StringSerializer\\\",\\\"value.serializer\\\":\\\"org.apache.kafka.common.serialization.ByteArraySerializer\\\"}}}\",\"/output/response.txt\"],\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imagePullPolicy\":\"Always\",\"name\":\"zoe\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"512M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]},{\"args\":[\"sh\",\"-c\",\"while [ -f /output/response.txt ]; do sleep 2; done\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"tailer\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"24M\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"24M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"initContainers\":[{\"command\":[\"touch\",\"/output/response.txt\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"create-output-file\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"nodeName\":\"wlezzar-thinkpad-t460p\",\"priority\":0,\"restartPolicy\":\"Never\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":300},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":300}],\"volumes\":[{\"emptyDir\":{},\"name\":\"output-volume\"},{\"name\":\"default-token-v9k66\",\"secret\":{\"defaultMode\":420,\"secretName\":\"default-token-v9k66\"}}]},\"status\":{\"conditions\":[{\"lastTransitionTime\":\"2020-06-27T19:21:42Z\",\"status\":\"True\",\"type\":\"Initialized\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with unready status: [zoe tailer]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"Ready\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with unready status: [zoe tailer]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"ContainersReady\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"status\":\"True\",\"type\":\"PodScheduled\"}],\"containerStatuses\":[{\"image\":\"alpine:3.9.5\",\"imageID\":\"\",\"lastState\":{},\"name\":\"tailer\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}},{\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imageID\":\"\",\"lastState\":{},\"name\":\"zoe\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}}],\"hostIP\":\"192.168.1.16\",\"initContainerStatuses\":[{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"create-output-file\",\"ready\":true,\"restartCount\":0,\"state\":{\"terminated\":{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"exitCode\":0,\"finishedAt\":\"2020-06-27T19:21:41Z\",\"reason\":\"Completed\",\"startedAt\":\"2020-06-27T19:21:41Z\"}}}],\"phase\":\"Pending\",\"podIP\":\"10.42.0.202\",\"podIPs\":[{\"ip\":\"10.42.0.202\"}],\"qosClass\":\"Burstable\",\"startTime\":\"2020-06-27T19:21:40Z\"}} 2020-06-27 21:21:42 DEBUG zoe: pod is spinning up... 2020-06-27 21:21:44 DEBUG zoe: received event 'MODIFIED' with pod : {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2020-06-27T19:21:40Z\",\"labels\":{\"owner\":\"zoe\",\"runnerId\":\"53ec2205-897e-4cc0-b1eb-07ea091f14c0\"},\"name\":\"zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"namespace\":\"default\",\"resourceVersion\":\"1513264\",\"selfLink\":\"/api/v1/namespaces/default/pods/zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"uid\":\"a8dea11a-a15d-4855-bc7f-ecb7ec7c78d6\"},\"spec\":{\"containers\":[{\"args\":[\"{\\\"function\\\":\\\"topics\\\",\\\"payload\\\":{\\\"props\\\":{\\\"bootstrap.servers\\\":\\\"broker:9092\\\",\\\"key.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"value.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"key.serializer\\\":\\\"org.apache.kafka.common.serialization.StringSerializer\\\",\\\"value.serializer\\\":\\\"org.apache.kafka.common.serialization.ByteArraySerializer\\\"}}}\",\"/output/response.txt\"],\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imagePullPolicy\":\"Always\",\"name\":\"zoe\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"512M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]},{\"args\":[\"sh\",\"-c\",\"while [ -f /output/response.txt ]; do sleep 2; done\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"tailer\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"24M\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"24M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"initContainers\":[{\"command\":[\"touch\",\"/output/response.txt\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"create-output-file\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"nodeName\":\"wlezzar-thinkpad-t460p\",\"priority\":0,\"restartPolicy\":\"Never\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":300},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":300}],\"volumes\":[{\"emptyDir\":{},\"name\":\"output-volume\"},{\"name\":\"default-token-v9k66\",\"secret\":{\"defaultMode\":420,\"secretName\":\"default-token-v9k66\"}}]},\"status\":{\"conditions\":[{\"lastTransitionTime\":\"2020-06-27T19:21:42Z\",\"status\":\"True\",\"type\":\"Initialized\"},{\"lastTransitionTime\":\"2020-06-27T19:21:44Z\",\"status\":\"True\",\"type\":\"Ready\"},{\"lastTransitionTime\":\"2020-06-27T19:21:44Z\",\"status\":\"True\",\"type\":\"ContainersReady\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"status\":\"True\",\"type\":\"PodScheduled\"}],\"containerStatuses\":[{\"containerID\":\"containerd://290cbb74626b8ad76d67d2ef4cfc7a0217a51a33b81eb333d95943bee8f9ffdb\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"tailer\",\"ready\":true,\"restartCount\":0,\"started\":true,\"state\":{\"running\":{\"startedAt\":\"2020-06-27T19:21:44Z\"}}},{\"containerID\":\"containerd://9e31ab970f1b46beec9a4af8d162f0a6bbaba56cbf3c32c121eae5efaea6d441\",\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imageID\":\"docker.io/adevinta/zoe-core@sha256:d70f67c34bbe9c32aa9aea55ac5801ab38652a1546ea26186a3c246616443a7a\",\"lastState\":{},\"name\":\"zoe\",\"ready\":true,\"restartCount\":0,\"started\":true,\"state\":{\"running\":{\"startedAt\":\"2020-06-27T19:21:43Z\"}}}],\"hostIP\":\"192.168.1.16\",\"initContainerStatuses\":[{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"create-output-file\",\"ready\":true,\"restartCount\":0,\"state\":{\"terminated\":{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"exitCode\":0,\"finishedAt\":\"2020-06-27T19:21:41Z\",\"reason\":\"Completed\",\"startedAt\":\"2020-06-27T19:21:41Z\"}}}],\"phase\":\"Running\",\"podIP\":\"10.42.0.202\",\"podIPs\":[{\"ip\":\"10.42.0.202\"}],\"qosClass\":\"Burstable\",\"startTime\":\"2020-06-27T19:21:40Z\"}} 2020-06-27 21:21:44 DEBUG zoe: zoe container is in : '{\"running\":{\"startedAt\":\"2020-06-27T19:21:43Z\"}}' 2020-06-27 21:21:48 DEBUG zoe: received event 'MODIFIED' with pod : {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2020-06-27T19:21:40Z\",\"labels\":{\"owner\":\"zoe\",\"runnerId\":\"53ec2205-897e-4cc0-b1eb-07ea091f14c0\"},\"name\":\"zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"namespace\":\"default\",\"resourceVersion\":\"1513268\",\"selfLink\":\"/api/v1/namespaces/default/pods/zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"uid\":\"a8dea11a-a15d-4855-bc7f-ecb7ec7c78d6\"},\"spec\":{\"containers\":[{\"args\":[\"{\\\"function\\\":\\\"topics\\\",\\\"payload\\\":{\\\"props\\\":{\\\"bootstrap.servers\\\":\\\"broker:9092\\\",\\\"key.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"value.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"key.serializer\\\":\\\"org.apache.kafka.common.serialization.StringSerializer\\\",\\\"value.serializer\\\":\\\"org.apache.kafka.common.serialization.ByteArraySerializer\\\"}}}\",\"/output/response.txt\"],\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imagePullPolicy\":\"Always\",\"name\":\"zoe\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"512M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]},{\"args\":[\"sh\",\"-c\",\"while [ -f /output/response.txt ]; do sleep 2; done\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"tailer\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"24M\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"24M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"initContainers\":[{\"command\":[\"touch\",\"/output/response.txt\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"create-output-file\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"nodeName\":\"wlezzar-thinkpad-t460p\",\"priority\":0,\"restartPolicy\":\"Never\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":300},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":300}],\"volumes\":[{\"emptyDir\":{},\"name\":\"output-volume\"},{\"name\":\"default-token-v9k66\",\"secret\":{\"defaultMode\":420,\"secretName\":\"default-token-v9k66\"}}]},\"status\":{\"conditions\":[{\"lastTransitionTime\":\"2020-06-27T19:21:42Z\",\"status\":\"True\",\"type\":\"Initialized\"},{\"lastTransitionTime\":\"2020-06-27T19:21:48Z\",\"message\":\"containers with unready status: [zoe]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"Ready\"},{\"lastTransitionTime\":\"2020-06-27T19:21:48Z\",\"message\":\"containers with unready status: [zoe]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"ContainersReady\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"status\":\"True\",\"type\":\"PodScheduled\"}],\"containerStatuses\":[{\"containerID\":\"containerd://290cbb74626b8ad76d67d2ef4cfc7a0217a51a33b81eb333d95943bee8f9ffdb\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"tailer\",\"ready\":true,\"restartCount\":0,\"started\":true,\"state\":{\"running\":{\"startedAt\":\"2020-06-27T19:21:44Z\"}}},{\"containerID\":\"containerd://9e31ab970f1b46beec9a4af8d162f0a6bbaba56cbf3c32c121eae5efaea6d441\",\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imageID\":\"docker.io/adevinta/zoe-core@sha256:d70f67c34bbe9c32aa9aea55ac5801ab38652a1546ea26186a3c246616443a7a\",\"lastState\":{},\"name\":\"zoe\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"terminated\":{\"containerID\":\"containerd://9e31ab970f1b46beec9a4af8d162f0a6bbaba56cbf3c32c121eae5efaea6d441\",\"exitCode\":0,\"finishedAt\":\"2020-06-27T19:21:47Z\",\"reason\":\"Completed\",\"startedAt\":\"2020-06-27T19:21:43Z\"}}}],\"hostIP\":\"192.168.1.16\",\"initContainerStatuses\":[{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"create-output-file\",\"ready\":true,\"restartCount\":0,\"state\":{\"terminated\":{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"exitCode\":0,\"finishedAt\":\"2020-06-27T19:21:41Z\",\"reason\":\"Completed\",\"startedAt\":\"2020-06-27T19:21:41Z\"}}}],\"phase\":\"Running\",\"podIP\":\"10.42.0.202\",\"podIPs\":[{\"ip\":\"10.42.0.202\"}],\"qosClass\":\"Burstable\",\"startTime\":\"2020-06-27T19:21:40Z\"}} 2020-06-27 21:21:48 DEBUG ExecWebSocketListener: Exec Web Socket: On Close with code:[1000], due to: [] 2020-06-27 21:21:48 DEBUG WatchConnectionManager: Force closing the watch io.fabric8.kubernetes.client.dsl.internal.WatchConnectionManager@66b71771 2020-06-27 21:21:48 DEBUG WatchConnectionManager: Closing websocket okhttp3.internal.ws.RealWebSocket@68ab0936 2020-06-27 21:21:48 DEBUG WatchConnectionManager: WebSocket close received. code: 1000, reason: 2020-06-27 21:21:48 DEBUG WatchConnectionManager: Ignoring onClose for already closed/closing websocket \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 value \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \"cat-facts-topic\" \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 2020-06-27 21:21:48 DEBUG zoe: closing: com.adevinta.oss.zoe.service.runners.KubernetesRunner@885e7ff 2020-06-27 21:21:48 DEBUG zoe: deleting potentially dangling pods... 2020-06-27 21:21:48 DEBUG zoe: closing: com.adevinta.oss.zoe.service.storage.BufferedKeyValueStore@625dfff3 2020-06-27 21:21:48 DEBUG zoe: closing: com.adevinta.oss.zoe.service.secrets.SecretsProviderWithLogging@57272109 Producing data Produce some data from the cat facts dataset (we assume you cloned the repository, and you are in the docs/guides/kubernetes directory): command zoe -e k8s -o table topics produce --topic cat-facts-topic --from-file data.json output 2020-06-27 21:12:37 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-27 21:12:38 INFO zoe: producing '212' records to topic 'cat-facts-topic' \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 produced \u2502 skipped \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 offset: 21 partition: 5 topic: \"cat-facts-topic\" timestamp: 1593285166459 \u2502 \u2502 \u2502 offset: 25 partition: 0 topic: \"cat-facts-topic\" timestamp: 1593285166500 \u2502 \u2502 \u2502 offset: 19 partition: 4 topic: \"cat-facts-topic\" timestamp: 1593285166501 \u2502 \u2502 \u2502 offset: 26 partition: 0 topic: \"cat-facts-topic\" timestamp: 1593285166501 \u2502 \u2502 \u2502 offset: 23 partition: 8 topic: \"cat-facts-topic\" timestamp: 1593285166501 \u2502 \u2502 | ... | | \u2502 offset: 17 partition: 3 topic: \"cat-facts-topic\" timestamp: 1593285166501 \u2502 \u2502 \u2502 offset: 47 partition: 6 topic: \"cat-facts-topic\" timestamp: 1593285166570 \u2502 \u2502 \u2502 offset: 49 partition: 7 topic: \"cat-facts-topic\" timestamp: 1593285166570 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Reading data You can read data using the following command: zoe -e k8s -o table topics consume cat-facts-topic --from 'PT1h' -n 5 output 2020-06-27 21:18:06 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-27 21:18:07 INFO zoe: querying offsets... 2020-06-27 21:18:15 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=0, 7=0, 9=0, 4=0, 3=0, 6=0, 5=0, 0=0, 2=0, 1=0})) 2020-06-27 21:18:24 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=5})) \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 599f89639a11040c4a163440 \u2502 Here is a video of some cats in zero gravity. yout... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 5 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a090aac31001185ed16 \u2502 Cats make more than 100 different sounds whereas d... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 590b9d90229d260020af0b06 \u2502 Evidence suggests domesticated cats have been arou... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008780aac31001185ed05 \u2502 Owning a cat can reduce the risk of stroke and hea... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b3d8e4960d3890713ca39a8 \u2502 A Chinese cat named Baidianr (meaning \"white spot\"... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Parallelizing the consumption to perform expensive searches Now imagine we want to find cat facts we received in the previous hour, written by the user whose first name is Kasimir . With zoe, you can achieve that using: command # filter out Kasimir's data zoe -e k8s -o table topics consume cat-facts-topic \\ --from 'PT1h' \\ --filter \"user.name.first == 'Kasimir'\" \\ -n 5 output 2020-06-27 21:28:43 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-27 21:28:44 INFO zoe: querying offsets... 2020-06-27 21:28:52 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=0, 7=0, 9=0, 4=0, 3=0, 6=0, 5=0, 0=0, 2=0, 1=0})) 2020-06-27 21:29:00 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=28})) \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a090aac31001185ed16 \u2502 Cats make more than 100 different sounds whereas d... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008780aac31001185ed05 \u2502 Owning a cat can reduce the risk of stroke and hea... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e007db0aac31001185ecf7 \u2502 There are cats who have survived falls from over 3... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a850aac31001185ed1a \u2502 Cats have a longer-term memory than dogs, especial... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00ba00aac31001185edfa \u2502 When cats leave their poop uncovered, it is a sign... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Now, what if the topic is too big? With zoe you can parallelize the consumption over multiple pods using the --jobs option: command # filter out Kasimir's data (parallelize the search over 5 pods) zoe -e k8s -o table topics consume cat-facts-topic \\ --from 'PT1h' \\ --filter \"user.name.first == 'Kasimir'\" \\ --jobs 5 \\ -n 5 output 2020-06-28 01:39:31 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-28 01:39:32 INFO zoe: querying offsets... 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=0, 3=0})) 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={7=0, 2=0})) 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={9=0, 4=0})) 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={6=0, 1=0})) 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={5=0, 0=0})) 2020-06-28 01:39:49 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={6=9})) \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e007cc0aac31001185ecf5 \u2502 Cats are the most popular pet in the United States... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008a30aac31001185ed0b \u2502 A cat's purr may be a form of self-healing, as it ... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00b820aac31001185edf7 \u2502 One legend claims that cats were created when a li... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e009390aac31001185ed10 \u2502 Most cats are lactose intolerant, and milk can cau... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00c080aac31001185ee01 \u2502 Cats only sweat through their foot pads. \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 This is obviously overkill in this case as we have a small dataset but this is extremely useful when dealing with large topics. Clean up command kubectl delete all -l context = zoe-demo","title":"Zoe with Kubernetes"},{"location":"guides/kubernetes/guide/#zoe-with-kubernetes","text":"In this tutorial, we will learn how to use Zoe with the Kubernetes runner. We will start by spinning up a simple one node Kafka cluster in Kubernetes, and then we will use zoe to interact with it using the kubernetes runner. With this runner, zoe spins up consumers / producers as pods, and the results will be forwarded to the caller's machine. This is useful in many scenarios. Here are some examples: When the Kafka cluster is not reachable from our local machine and is only reachable from within the Kubernetes cluster. If we want to parallelize topics consumption over multiple pods (see an example in this guide).","title":"Zoe with kubernetes"},{"location":"guides/kubernetes/guide/#prerequisites","text":"zoe (Install instructions here ) kubectl and a working kubernetes cluster (cf. below for more instructions on how to install a kubernetes cluster) This section assumes you have already gone through the Basic scenario guide and will not explain the basics that were already covered there.","title":"Prerequisites"},{"location":"guides/kubernetes/guide/#prepare-the-environment","text":"","title":"Prepare the environment"},{"location":"guides/kubernetes/guide/#kubernetes-setup","text":"In this tutorial, you will need kubectl and a working kubernetes cluster that you can use to test Zoe. Several solutions exist to install a kubernetes cluster locally. The most common ones are: Minikube , Kind , MicroK8s and k3s . No matter how you installed your local cluster (or if you are using a remote one), make sure your current context in your kube config file is pointing to that cluster (you can explicitly configure zoe to use a specific context and a specific namespace but for the sake of simplicity we will leave this part out of this tutorial). You can ensure that the kubernetes cluster is reachable and is pointing to the right context by using: command kubectl cluster-info output Kubernetes master is running at https://127.0.0.1:16443 CoreDNS is running at https://127.0.0.1:16443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'. The output may be different on your machine.","title":"Kubernetes setup"},{"location":"guides/kubernetes/guide/#setup-kafka","text":"Ready to use manifest files to install a single node Kafka cluster on kubernetes are provided in the repository . Let's use them: Clone the repository: git clone https://github.com/adevinta/zoe.git Go to the kubernetes guide directory: cd zoe/docs/guides/kubernetes Apply the manifests: kubectl apply --prune --selector='context=zoe-demo' -f resources This will install a Zookeeper and a Kafka node. You can check the readiness of the pods using: command kubectl get all -l context = zoe-demo output NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/broker ClusterIP 10.152.183.151 <none> 9092/TCP,29092/TCP 44m service/zookeeper ClusterIP 10.152.183.157 <none> 2181/TCP 44m NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/broker 1/1 1 1 44m deployment.apps/zookeeper 1/1 1 1 44m","title":"Setup Kafka"},{"location":"guides/kubernetes/guide/#configure-zoe","text":"Create a new file named k8s.yml in zoe's configuration directory ( ~/.zoe/config by default) and fill it with the following content: ~/.zoe/config/k8s.yml clusters: default: props: bootstrap.servers: \"broker:9092\" key.deserializer: \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer: \"org.apache.kafka.common.serialization.StringDeserializer\" key.serializer: \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer: \"org.apache.kafka.common.serialization.ByteArraySerializer\" runners: default: \"kubernetes\" The configuration above defines the kubernetes runner as the default one. When using this runner with no additional configuration, zoe targets the kubernetes cluster pointed at by the current context (cf. kubectl cluster-info to know which cluster you are targeting). It is possible to point to a specific context. To know more, visit the kubernetes runner dedicated section . Notice the bootstrap.servers property above pointing to broker:9092 . We are using the actual broker Service name defined in kubernetes. This DNS name is only visible inside the kubernetes cluster. This is possible because as explained above, the kubernetes runner spins up the consumers, producers and all the kafka clients as pods inside the cluster. So the internal kubernetes DNS names are visible and usable. If you don't want to write this configuration by hand, you can copy it directly from the repository by using: command zoe config init --from git --url https://github.com/adevinta/zoe --dir docs/guides/kubernetes/config Ensure zoe is aware about our new configuration: command zoe -e k8s -o table config clusters list output 2020-06-27 20:14:05 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 cluster \u2502 brokers \u2502 registry \u2502 topics \u2502 groups \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 default \u2502 broker:9092 \u2502 null \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Notice our use of -e k8s in the above command. Zoe supports having multiple configuration files inside its config directory representing different environments. To point to a specific environment, we use the -e <env name> ( <env name> is the name of the configuration file without the extension). When no environment is specified, zoe uses the environment called default . Zoe is now ready to be used against our cluster!","title":"Configure zoe"},{"location":"guides/kubernetes/guide/#creating-the-topic","text":"Create a topic called cat-facts-topic (This first run will download the zoe docker image so expect it to be slower): command zoe -e k8s topics create cat-facts-topic --partitions 10 output 2020-06-27 20 : 54 : 13 INFO zoe: loading config from url : file:~/.zoe/config/k 8 s.yml 2020-06-27 20 : 54 : 14 INFO zoe: creating topic: cat-facts-topic { \"done\" : true } Ensure our topic is created: command zoe -e k8s -o table topics list output 2020-06-27 20 : 56 : 47 INFO zoe: loading config from url : file:~/.zoe/config/k 8 s.yml 2020-06-27 20 : 56 : 48 INFO zoe: requesting topics... \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 value \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \"cat-facts-topic\" \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 You can higher up the logging verbosity to see how zoe launches pods and watches for changes: command zoe -vv -e k8s -o table topics list output 2020-06-27 21:21:39 DEBUG zoe: trying to fetch config url for env 'common' with : EnvVarsConfigUrlProvider 2020-06-27 21:21:39 DEBUG zoe: trying to fetch config url for env 'common' with : LocalConfigDirUrlProvider 2020-06-27 21:21:39 DEBUG zoe: trying to fetch config url for env 'k8s' with : EnvVarsConfigUrlProvider 2020-06-27 21:21:39 DEBUG zoe: trying to fetch config url for env 'k8s' with : LocalConfigDirUrlProvider 2020-06-27 21:21:39 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-27 21:21:39 DEBUG Config: Trying to configure client from Kubernetes config... 2020-06-27 21:21:39 DEBUG Config: Found for Kubernetes config at: [/home/wlezzar/.kube/config]. 2020-06-27 21:21:40 INFO zoe: requesting topics... 2020-06-27 21:21:40 DEBUG WatchConnectionManager: Connecting websocket ... io.fabric8.kubernetes.client.dsl.internal.WatchConnectionManager@66b71771 2020-06-27 21:21:40 DEBUG WatchConnectionManager: WebSocket successfully opened 2020-06-27 21:21:40 DEBUG zoe: received event 'ADDED' with pod : {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2020-06-27T19:21:40Z\",\"labels\":{\"owner\":\"zoe\",\"runnerId\":\"53ec2205-897e-4cc0-b1eb-07ea091f14c0\"},\"name\":\"zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"namespace\":\"default\",\"resourceVersion\":\"1513249\",\"selfLink\":\"/api/v1/namespaces/default/pods/zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"uid\":\"a8dea11a-a15d-4855-bc7f-ecb7ec7c78d6\"},\"spec\":{\"containers\":[{\"args\":[\"{\\\"function\\\":\\\"topics\\\",\\\"payload\\\":{\\\"props\\\":{\\\"bootstrap.servers\\\":\\\"broker:9092\\\",\\\"key.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"value.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"key.serializer\\\":\\\"org.apache.kafka.common.serialization.StringSerializer\\\",\\\"value.serializer\\\":\\\"org.apache.kafka.common.serialization.ByteArraySerializer\\\"}}}\",\"/output/response.txt\"],\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imagePullPolicy\":\"Always\",\"name\":\"zoe\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"512M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]},{\"args\":[\"sh\",\"-c\",\"while [ -f /output/response.txt ]; do sleep 2; done\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"tailer\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"24M\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"24M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"initContainers\":[{\"command\":[\"touch\",\"/output/response.txt\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"create-output-file\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"nodeName\":\"wlezzar-thinkpad-t460p\",\"priority\":0,\"restartPolicy\":\"Never\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":300},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":300}],\"volumes\":[{\"emptyDir\":{},\"name\":\"output-volume\"},{\"name\":\"default-token-v9k66\",\"secret\":{\"defaultMode\":420,\"secretName\":\"default-token-v9k66\"}}]},\"status\":{\"conditions\":[{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with incomplete status: [create-output-file]\",\"reason\":\"ContainersNotInitialized\",\"status\":\"False\",\"type\":\"Initialized\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with unready status: [zoe tailer]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"Ready\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with unready status: [zoe tailer]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"ContainersReady\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"status\":\"True\",\"type\":\"PodScheduled\"}],\"containerStatuses\":[{\"image\":\"alpine:3.9.5\",\"imageID\":\"\",\"lastState\":{},\"name\":\"tailer\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}},{\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imageID\":\"\",\"lastState\":{},\"name\":\"zoe\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}}],\"hostIP\":\"192.168.1.16\",\"initContainerStatuses\":[{\"image\":\"alpine:3.9.5\",\"imageID\":\"\",\"lastState\":{},\"name\":\"create-output-file\",\"ready\":false,\"restartCount\":0,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}}],\"phase\":\"Pending\",\"qosClass\":\"Burstable\",\"startTime\":\"2020-06-27T19:21:40Z\"}} 2020-06-27 21:21:40 DEBUG zoe: pod is spinning up... 2020-06-27 21:21:42 DEBUG zoe: received event 'MODIFIED' with pod : {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2020-06-27T19:21:40Z\",\"labels\":{\"owner\":\"zoe\",\"runnerId\":\"53ec2205-897e-4cc0-b1eb-07ea091f14c0\"},\"name\":\"zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"namespace\":\"default\",\"resourceVersion\":\"1513256\",\"selfLink\":\"/api/v1/namespaces/default/pods/zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"uid\":\"a8dea11a-a15d-4855-bc7f-ecb7ec7c78d6\"},\"spec\":{\"containers\":[{\"args\":[\"{\\\"function\\\":\\\"topics\\\",\\\"payload\\\":{\\\"props\\\":{\\\"bootstrap.servers\\\":\\\"broker:9092\\\",\\\"key.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"value.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"key.serializer\\\":\\\"org.apache.kafka.common.serialization.StringSerializer\\\",\\\"value.serializer\\\":\\\"org.apache.kafka.common.serialization.ByteArraySerializer\\\"}}}\",\"/output/response.txt\"],\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imagePullPolicy\":\"Always\",\"name\":\"zoe\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"512M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]},{\"args\":[\"sh\",\"-c\",\"while [ -f /output/response.txt ]; do sleep 2; done\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"tailer\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"24M\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"24M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"initContainers\":[{\"command\":[\"touch\",\"/output/response.txt\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"create-output-file\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"nodeName\":\"wlezzar-thinkpad-t460p\",\"priority\":0,\"restartPolicy\":\"Never\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":300},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":300}],\"volumes\":[{\"emptyDir\":{},\"name\":\"output-volume\"},{\"name\":\"default-token-v9k66\",\"secret\":{\"defaultMode\":420,\"secretName\":\"default-token-v9k66\"}}]},\"status\":{\"conditions\":[{\"lastTransitionTime\":\"2020-06-27T19:21:42Z\",\"status\":\"True\",\"type\":\"Initialized\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with unready status: [zoe tailer]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"Ready\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"message\":\"containers with unready status: [zoe tailer]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"ContainersReady\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"status\":\"True\",\"type\":\"PodScheduled\"}],\"containerStatuses\":[{\"image\":\"alpine:3.9.5\",\"imageID\":\"\",\"lastState\":{},\"name\":\"tailer\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}},{\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imageID\":\"\",\"lastState\":{},\"name\":\"zoe\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"waiting\":{\"reason\":\"PodInitializing\"}}}],\"hostIP\":\"192.168.1.16\",\"initContainerStatuses\":[{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"create-output-file\",\"ready\":true,\"restartCount\":0,\"state\":{\"terminated\":{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"exitCode\":0,\"finishedAt\":\"2020-06-27T19:21:41Z\",\"reason\":\"Completed\",\"startedAt\":\"2020-06-27T19:21:41Z\"}}}],\"phase\":\"Pending\",\"podIP\":\"10.42.0.202\",\"podIPs\":[{\"ip\":\"10.42.0.202\"}],\"qosClass\":\"Burstable\",\"startTime\":\"2020-06-27T19:21:40Z\"}} 2020-06-27 21:21:42 DEBUG zoe: pod is spinning up... 2020-06-27 21:21:44 DEBUG zoe: received event 'MODIFIED' with pod : {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2020-06-27T19:21:40Z\",\"labels\":{\"owner\":\"zoe\",\"runnerId\":\"53ec2205-897e-4cc0-b1eb-07ea091f14c0\"},\"name\":\"zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"namespace\":\"default\",\"resourceVersion\":\"1513264\",\"selfLink\":\"/api/v1/namespaces/default/pods/zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"uid\":\"a8dea11a-a15d-4855-bc7f-ecb7ec7c78d6\"},\"spec\":{\"containers\":[{\"args\":[\"{\\\"function\\\":\\\"topics\\\",\\\"payload\\\":{\\\"props\\\":{\\\"bootstrap.servers\\\":\\\"broker:9092\\\",\\\"key.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"value.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"key.serializer\\\":\\\"org.apache.kafka.common.serialization.StringSerializer\\\",\\\"value.serializer\\\":\\\"org.apache.kafka.common.serialization.ByteArraySerializer\\\"}}}\",\"/output/response.txt\"],\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imagePullPolicy\":\"Always\",\"name\":\"zoe\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"512M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]},{\"args\":[\"sh\",\"-c\",\"while [ -f /output/response.txt ]; do sleep 2; done\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"tailer\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"24M\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"24M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"initContainers\":[{\"command\":[\"touch\",\"/output/response.txt\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"create-output-file\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"nodeName\":\"wlezzar-thinkpad-t460p\",\"priority\":0,\"restartPolicy\":\"Never\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":300},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":300}],\"volumes\":[{\"emptyDir\":{},\"name\":\"output-volume\"},{\"name\":\"default-token-v9k66\",\"secret\":{\"defaultMode\":420,\"secretName\":\"default-token-v9k66\"}}]},\"status\":{\"conditions\":[{\"lastTransitionTime\":\"2020-06-27T19:21:42Z\",\"status\":\"True\",\"type\":\"Initialized\"},{\"lastTransitionTime\":\"2020-06-27T19:21:44Z\",\"status\":\"True\",\"type\":\"Ready\"},{\"lastTransitionTime\":\"2020-06-27T19:21:44Z\",\"status\":\"True\",\"type\":\"ContainersReady\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"status\":\"True\",\"type\":\"PodScheduled\"}],\"containerStatuses\":[{\"containerID\":\"containerd://290cbb74626b8ad76d67d2ef4cfc7a0217a51a33b81eb333d95943bee8f9ffdb\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"tailer\",\"ready\":true,\"restartCount\":0,\"started\":true,\"state\":{\"running\":{\"startedAt\":\"2020-06-27T19:21:44Z\"}}},{\"containerID\":\"containerd://9e31ab970f1b46beec9a4af8d162f0a6bbaba56cbf3c32c121eae5efaea6d441\",\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imageID\":\"docker.io/adevinta/zoe-core@sha256:d70f67c34bbe9c32aa9aea55ac5801ab38652a1546ea26186a3c246616443a7a\",\"lastState\":{},\"name\":\"zoe\",\"ready\":true,\"restartCount\":0,\"started\":true,\"state\":{\"running\":{\"startedAt\":\"2020-06-27T19:21:43Z\"}}}],\"hostIP\":\"192.168.1.16\",\"initContainerStatuses\":[{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"create-output-file\",\"ready\":true,\"restartCount\":0,\"state\":{\"terminated\":{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"exitCode\":0,\"finishedAt\":\"2020-06-27T19:21:41Z\",\"reason\":\"Completed\",\"startedAt\":\"2020-06-27T19:21:41Z\"}}}],\"phase\":\"Running\",\"podIP\":\"10.42.0.202\",\"podIPs\":[{\"ip\":\"10.42.0.202\"}],\"qosClass\":\"Burstable\",\"startTime\":\"2020-06-27T19:21:40Z\"}} 2020-06-27 21:21:44 DEBUG zoe: zoe container is in : '{\"running\":{\"startedAt\":\"2020-06-27T19:21:43Z\"}}' 2020-06-27 21:21:48 DEBUG zoe: received event 'MODIFIED' with pod : {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2020-06-27T19:21:40Z\",\"labels\":{\"owner\":\"zoe\",\"runnerId\":\"53ec2205-897e-4cc0-b1eb-07ea091f14c0\"},\"name\":\"zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"namespace\":\"default\",\"resourceVersion\":\"1513268\",\"selfLink\":\"/api/v1/namespaces/default/pods/zoe-dd615e81-4fec-4eba-81e2-d0b89a0ea897\",\"uid\":\"a8dea11a-a15d-4855-bc7f-ecb7ec7c78d6\"},\"spec\":{\"containers\":[{\"args\":[\"{\\\"function\\\":\\\"topics\\\",\\\"payload\\\":{\\\"props\\\":{\\\"bootstrap.servers\\\":\\\"broker:9092\\\",\\\"key.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"value.deserializer\\\":\\\"org.apache.kafka.common.serialization.StringDeserializer\\\",\\\"key.serializer\\\":\\\"org.apache.kafka.common.serialization.StringSerializer\\\",\\\"value.serializer\\\":\\\"org.apache.kafka.common.serialization.ByteArraySerializer\\\"}}}\",\"/output/response.txt\"],\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imagePullPolicy\":\"Always\",\"name\":\"zoe\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"512M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]},{\"args\":[\"sh\",\"-c\",\"while [ -f /output/response.txt ]; do sleep 2; done\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"tailer\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"24M\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"24M\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"initContainers\":[{\"command\":[\"touch\",\"/output/response.txt\"],\"image\":\"alpine:3.9.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"create-output-file\",\"resources\":{},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"volumeMounts\":[{\"mountPath\":\"/output\",\"name\":\"output-volume\"},{\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\",\"name\":\"default-token-v9k66\",\"readOnly\":true}]}],\"nodeName\":\"wlezzar-thinkpad-t460p\",\"priority\":0,\"restartPolicy\":\"Never\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":300},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":300}],\"volumes\":[{\"emptyDir\":{},\"name\":\"output-volume\"},{\"name\":\"default-token-v9k66\",\"secret\":{\"defaultMode\":420,\"secretName\":\"default-token-v9k66\"}}]},\"status\":{\"conditions\":[{\"lastTransitionTime\":\"2020-06-27T19:21:42Z\",\"status\":\"True\",\"type\":\"Initialized\"},{\"lastTransitionTime\":\"2020-06-27T19:21:48Z\",\"message\":\"containers with unready status: [zoe]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"Ready\"},{\"lastTransitionTime\":\"2020-06-27T19:21:48Z\",\"message\":\"containers with unready status: [zoe]\",\"reason\":\"ContainersNotReady\",\"status\":\"False\",\"type\":\"ContainersReady\"},{\"lastTransitionTime\":\"2020-06-27T19:21:40Z\",\"status\":\"True\",\"type\":\"PodScheduled\"}],\"containerStatuses\":[{\"containerID\":\"containerd://290cbb74626b8ad76d67d2ef4cfc7a0217a51a33b81eb333d95943bee8f9ffdb\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"tailer\",\"ready\":true,\"restartCount\":0,\"started\":true,\"state\":{\"running\":{\"startedAt\":\"2020-06-27T19:21:44Z\"}}},{\"containerID\":\"containerd://9e31ab970f1b46beec9a4af8d162f0a6bbaba56cbf3c32c121eae5efaea6d441\",\"image\":\"docker.io/adevinta/zoe-core:0.23.1\",\"imageID\":\"docker.io/adevinta/zoe-core@sha256:d70f67c34bbe9c32aa9aea55ac5801ab38652a1546ea26186a3c246616443a7a\",\"lastState\":{},\"name\":\"zoe\",\"ready\":false,\"restartCount\":0,\"started\":false,\"state\":{\"terminated\":{\"containerID\":\"containerd://9e31ab970f1b46beec9a4af8d162f0a6bbaba56cbf3c32c121eae5efaea6d441\",\"exitCode\":0,\"finishedAt\":\"2020-06-27T19:21:47Z\",\"reason\":\"Completed\",\"startedAt\":\"2020-06-27T19:21:43Z\"}}}],\"hostIP\":\"192.168.1.16\",\"initContainerStatuses\":[{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"image\":\"docker.io/library/alpine:3.9.5\",\"imageID\":\"docker.io/library/alpine@sha256:115731bab0862031b44766733890091c17924f9b7781b79997f5f163be262178\",\"lastState\":{},\"name\":\"create-output-file\",\"ready\":true,\"restartCount\":0,\"state\":{\"terminated\":{\"containerID\":\"containerd://d02eff3e9547c1bbda6b90ae18b3baa3cd262886912b56be0bf68f6bed0ed41d\",\"exitCode\":0,\"finishedAt\":\"2020-06-27T19:21:41Z\",\"reason\":\"Completed\",\"startedAt\":\"2020-06-27T19:21:41Z\"}}}],\"phase\":\"Running\",\"podIP\":\"10.42.0.202\",\"podIPs\":[{\"ip\":\"10.42.0.202\"}],\"qosClass\":\"Burstable\",\"startTime\":\"2020-06-27T19:21:40Z\"}} 2020-06-27 21:21:48 DEBUG ExecWebSocketListener: Exec Web Socket: On Close with code:[1000], due to: [] 2020-06-27 21:21:48 DEBUG WatchConnectionManager: Force closing the watch io.fabric8.kubernetes.client.dsl.internal.WatchConnectionManager@66b71771 2020-06-27 21:21:48 DEBUG WatchConnectionManager: Closing websocket okhttp3.internal.ws.RealWebSocket@68ab0936 2020-06-27 21:21:48 DEBUG WatchConnectionManager: WebSocket close received. code: 1000, reason: 2020-06-27 21:21:48 DEBUG WatchConnectionManager: Ignoring onClose for already closed/closing websocket \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 value \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \"cat-facts-topic\" \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 2020-06-27 21:21:48 DEBUG zoe: closing: com.adevinta.oss.zoe.service.runners.KubernetesRunner@885e7ff 2020-06-27 21:21:48 DEBUG zoe: deleting potentially dangling pods... 2020-06-27 21:21:48 DEBUG zoe: closing: com.adevinta.oss.zoe.service.storage.BufferedKeyValueStore@625dfff3 2020-06-27 21:21:48 DEBUG zoe: closing: com.adevinta.oss.zoe.service.secrets.SecretsProviderWithLogging@57272109","title":"Creating the topic"},{"location":"guides/kubernetes/guide/#producing-data","text":"Produce some data from the cat facts dataset (we assume you cloned the repository, and you are in the docs/guides/kubernetes directory): command zoe -e k8s -o table topics produce --topic cat-facts-topic --from-file data.json output 2020-06-27 21:12:37 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-27 21:12:38 INFO zoe: producing '212' records to topic 'cat-facts-topic' \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 produced \u2502 skipped \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 offset: 21 partition: 5 topic: \"cat-facts-topic\" timestamp: 1593285166459 \u2502 \u2502 \u2502 offset: 25 partition: 0 topic: \"cat-facts-topic\" timestamp: 1593285166500 \u2502 \u2502 \u2502 offset: 19 partition: 4 topic: \"cat-facts-topic\" timestamp: 1593285166501 \u2502 \u2502 \u2502 offset: 26 partition: 0 topic: \"cat-facts-topic\" timestamp: 1593285166501 \u2502 \u2502 \u2502 offset: 23 partition: 8 topic: \"cat-facts-topic\" timestamp: 1593285166501 \u2502 \u2502 | ... | | \u2502 offset: 17 partition: 3 topic: \"cat-facts-topic\" timestamp: 1593285166501 \u2502 \u2502 \u2502 offset: 47 partition: 6 topic: \"cat-facts-topic\" timestamp: 1593285166570 \u2502 \u2502 \u2502 offset: 49 partition: 7 topic: \"cat-facts-topic\" timestamp: 1593285166570 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Producing data"},{"location":"guides/kubernetes/guide/#reading-data","text":"You can read data using the following command: zoe -e k8s -o table topics consume cat-facts-topic --from 'PT1h' -n 5 output 2020-06-27 21:18:06 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-27 21:18:07 INFO zoe: querying offsets... 2020-06-27 21:18:15 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=0, 7=0, 9=0, 4=0, 3=0, 6=0, 5=0, 0=0, 2=0, 1=0})) 2020-06-27 21:18:24 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=5})) \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 599f89639a11040c4a163440 \u2502 Here is a video of some cats in zero gravity. yout... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 5 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a090aac31001185ed16 \u2502 Cats make more than 100 different sounds whereas d... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 590b9d90229d260020af0b06 \u2502 Evidence suggests domesticated cats have been arou... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008780aac31001185ed05 \u2502 Owning a cat can reduce the risk of stroke and hea... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b3d8e4960d3890713ca39a8 \u2502 A Chinese cat named Baidianr (meaning \"white spot\"... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Reading data"},{"location":"guides/kubernetes/guide/#parallelizing-the-consumption-to-perform-expensive-searches","text":"Now imagine we want to find cat facts we received in the previous hour, written by the user whose first name is Kasimir . With zoe, you can achieve that using: command # filter out Kasimir's data zoe -e k8s -o table topics consume cat-facts-topic \\ --from 'PT1h' \\ --filter \"user.name.first == 'Kasimir'\" \\ -n 5 output 2020-06-27 21:28:43 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-27 21:28:44 INFO zoe: querying offsets... 2020-06-27 21:28:52 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=0, 7=0, 9=0, 4=0, 3=0, 6=0, 5=0, 0=0, 2=0, 1=0})) 2020-06-27 21:29:00 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=28})) \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a090aac31001185ed16 \u2502 Cats make more than 100 different sounds whereas d... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008780aac31001185ed05 \u2502 Owning a cat can reduce the risk of stroke and hea... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e007db0aac31001185ecf7 \u2502 There are cats who have survived falls from over 3... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a850aac31001185ed1a \u2502 Cats have a longer-term memory than dogs, especial... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00ba00aac31001185edfa \u2502 When cats leave their poop uncovered, it is a sign... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Now, what if the topic is too big? With zoe you can parallelize the consumption over multiple pods using the --jobs option: command # filter out Kasimir's data (parallelize the search over 5 pods) zoe -e k8s -o table topics consume cat-facts-topic \\ --from 'PT1h' \\ --filter \"user.name.first == 'Kasimir'\" \\ --jobs 5 \\ -n 5 output 2020-06-28 01:39:31 INFO zoe: loading config from url : file:~/.zoe/config/k8s.yml 2020-06-28 01:39:32 INFO zoe: querying offsets... 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={8=0, 3=0})) 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={7=0, 2=0})) 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={9=0, 4=0})) 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={6=0, 1=0})) 2020-06-28 01:39:40 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={5=0, 0=0})) 2020-06-28 01:39:49 INFO zoe: polling topic 'cat-facts-topic' (subscription : AssignPartitions(partitions={6=9})) \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e007cc0aac31001185ecf5 \u2502 Cats are the most popular pet in the United States... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008a30aac31001185ed0b \u2502 A cat's purr may be a form of self-healing, as it ... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00b820aac31001185edf7 \u2502 One legend claims that cats were created when a li... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e009390aac31001185ed10 \u2502 Most cats are lactose intolerant, and milk can cau... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00c080aac31001185ee01 \u2502 Cats only sweat through their foot pads. \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 This is obviously overkill in this case as we have a small dataset but this is extremely useful when dealing with large topics.","title":"Parallelizing the consumption to perform expensive searches"},{"location":"guides/kubernetes/guide/#clean-up","text":"command kubectl delete all -l context = zoe-demo","title":"Clean up"},{"location":"guides/simple/guide/","text":"A basic scenario This guide walks you through the most basic functionalities of zoe. It uses a funny dataset downloaded from the Cat Facts API to explore reading and writing data from / into kafka using zoe. In this guide, we will spin up a simple one node kafka cluster locally and then interact with it using zoe. If you want to follow along the instructions in this guide, you can find all the relevant files / datasets in the repository . What you will learn In this guide, you will learn the following aspects of zoe: Creating topics Listing topics Describing topics Writing json data into kafka Reading json data from kafka Using jmespath expressions to filter read data based on its content. Prerequisites For this guide you will need: Zoe (install instructions are here ) Docker and docker-compose (that we will use to spin up Kafka) Prepare the environment Clone the repository : git clone https://github.com/adevinta/zoe.git Go to the directory: docs/guides/simple Spin up the kafka cluster: docker-compose up -d . Check all the containers are up: command docker-compose ps output Name Command State Ports ------------------------------------------------------------------------------------------------ broker /etc/confluent/docker/run Up 0.0.0.0:29092->29092/tcp, 0.0.0.0:9092->9092/tcp zookeeper /etc/confluent/docker/run Up 0.0.0.0:2181->2181/tcp, 2888/tcp, 3888/tcp Configure zoe Now, we need to configure zoe to make it aware of the cluster. Create a new file called default.yml inside zoe's config directory ( ~/.zoe/config by default) and fill it with the following content: ~/.zoe/config/default.yml clusters : default : props : bootstrap.servers : \"localhost:29092\" key.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" key.serializer : \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer : \"org.apache.kafka.common.serialization.ByteArraySerializer\" topics : input : name : input-topic runners : default : \"local\" The configuration above defines: A clusters section containing a single cluster aliased default . Clusters can be given any alias. Later on, when using zoe, we refer to a specific cluster by its alias using the --cluster <cluster alias> option. Otherwise, Zoe uses the cluster alias default if no cluster is specified using --cluster . The default cluster configuration defines: A props section containing the kafka properties that need to be supplied to the kafka clients when interacting with the cluster. A topics section containing a single topic aliased input that points to the real topic name input-topic . When reading to / from topics with zoe, we refer to a specific topic by its alias or real name. If we use an alias, zoe replaces it with the real name defined in the configuration. The runners section defines the local runner as the default one. This makes zoe by default runs the consumers / producers from the caller's machine. Zoe can use other runners like the kubernetes runner which runs the consumers / producers as kubernetes pods in a remote cluster. For more information about runners, checkout the dedicated section about runners . For more information on how to configure zoe, checkout the configuration section in the documentation . If you don't want to write this configuration by hand, you can copy the one already present in the repository by using the following command: command zoe config init --from git --url https://github.com/adevinta/zoe --dir docs/guides/simple/config You can check that zoe is now aware of the cluster by executing the following command: command zoe --silent -o table config clusters list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 cluster \u2502 brokers \u2502 registry \u2502 topics \u2502 groups \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 local \u2502 localhost:29092 \u2502 null \u2502 alias: \"input\" name: \"input-topic\" \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Now, you're ready to use zoe to interact with the local kafka cluster. Creating topics The first step is to create our input topic by executing the following command: command zoe topics create input --partitions 5 --replication-factor 1 output 2020-06-27 17:53:23 INFO zoe: loading config from url : file:~/.zoe/config/default.yml 2020-06-27 17:53:23 INFO zoe: creating topic: input-topic 2020-06-27 17:53:24 INFO AppInfoParser: Kafka version: 5.5.0-ccs 2020-06-27 17:53:24 INFO AppInfoParser: Kafka commitId: 785a156634af5f7e 2020-06-27 17:53:24 INFO AppInfoParser: Kafka startTimeMs: 1593273204138 {\"done\":true} Notice that we have used the topic alias input and zoe replaced it with the real name of the topic input-topic defined in the configuration file. In zoe, you can use both aliases or real topic names when interacting with topics. Let's check the topic has been created (we are using the --silent option to avoid outputting logs): command zoe --silent -o table topics list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 value \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \"input-topic\" \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 We can also describe the topic: command zoe --silent -o table topics describe input output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 topic \u2502 internal \u2502 partitions \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 0 \u2502 \u2502 \u2502 \u2502 1 \u2502 \u2502 input-topic \u2502 false \u2502 2 \u2502 \u2502 \u2502 \u2502 3 \u2502 \u2502 \u2502 \u2502 4 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Reading and writing data into the topic Let's write some data into the topic. We will use the dataset provided in the repository that contain some data from cats facts API. The following command writes the json data contained in this file into the input topic (assuming you are in the docs/guides/simple directory): command zoe -o table topics produce --topic input --from-file data.json output 2020-06-27 18:03:17 INFO zoe: loading config from url : file:~/.zoe/config/default.yml 2020-06-27 18:03:17 INFO zoe: producing '212' records to topic 'input-topic' 2020-06-27 18:03:17 INFO AppInfoParser: Kafka version: 5.5.0-ccs 2020-06-27 18:03:17 INFO AppInfoParser: Kafka commitId: 785a156634af5f7e 2020-06-27 18:03:17 INFO AppInfoParser: Kafka startTimeMs: 1593273797705 2020-06-27 18:03:17 INFO Metadata: [Producer clientId=producer-1] Cluster ID: s7yIyv-2RSOWeNSaNSgAhQ 2020-06-27 18:03:17 INFO KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 produced \u2502 skipped \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 offset: 30 partition: 3 topic: \"input-topic\" timestamp: 1593273797924 \u2502 \u2502 \u2502 offset: 53 partition: 1 topic: \"input-topic\" timestamp: 1593273797937 \u2502 \u2502 \u2502 offset: 47 partition: 4 topic: \"input-topic\" timestamp: 1593273797937 \u2502 \u2502 \u2502 offset: 31 partition: 3 topic: \"input-topic\" timestamp: 1593273797937 \u2502 \u2502 \u2502 offset: 32 partition: 3 topic: \"input-topic\" timestamp: 1593273797937 \u2502 \u2502 \u2502 offset: 94 partition: 1 topic: \"input-topic\" timestamp: 1593273797951 \u2502 \u2502 | ... | ... | \u2502 offset: 95 partition: 1 topic: \"input-topic\" timestamp: 1593273797951 \u2502 \u2502 \u2502 offset: 96 partition: 1 topic: \"input-topic\" timestamp: 1593273797951 \u2502 \u2502 \u2502 offset: 85 partition: 2 topic: \"input-topic\" timestamp: 1593273797951 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 To read the data we have just inserted: command # read 5 messages from the last hour zoe --silent -o table topics consume input -n 5 --from 'PT1h' output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b1b411d841d9700146158d9 \u2502 The Egyptian Mau\u2019s name is derived from the Middle... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 5 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 59a60b8e6acf530020f3586e \u2502 Cat owners are 17% more likely to have a graduate ... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 5 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b1b4055841d9700146158d3 \u2502 Scottish sailer Alexander Selkirk once survived fo... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5a4d76916ef087002174c28b \u2502 A cat\u2019s nose pad is ridged with a unique pattern, ... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a120aac31001185ed17 \u2502 A cat's brain is 90% similar to a human's \u2014 more s... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 You can know more about the different options that can be used with: zoe topics consume --help . Filtering events One of the most powerful feature of zoe is its ability to filter out events using criterias based on events content. In the following example, we are filtering out cat facts written by the user whose first name is Kasimir : command # filter out Kasimir's data zoe -o table topics consume input \\ -n 5 \\ --from 'PT1h' \\ --filter \"user.name.first == 'Kasimir'\" output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a120aac31001185ed17 \u2502 A cat's brain is 90% similar to a human's \u2014 more s... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e007cc0aac31001185ecf5 \u2502 Cats are the most popular pet in the United States... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008510aac31001185ecfe \u2502 In tigers and tabbies, the middle of the tongue is... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00bdb0aac31001185edfd \u2502 Cats can change their meow to manipulate a human. ... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00ba00aac31001185edfa \u2502 When cats leave their poop uncovered, it is a sign... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 The --filter option takes a jmespath expression and runs it against each event read from the topic. If this expression returns true for a given event, this event is returned. Otherwise, it is discarded. This feature is especially powerful when using remote runners as Zoe would run the consumers in the cloud (kubernetes or AWS lambdas) and only returns the relevant data to the caller's machine. Clean up the environment docker-compose down -v","title":"Basic scenario"},{"location":"guides/simple/guide/#a-basic-scenario","text":"This guide walks you through the most basic functionalities of zoe. It uses a funny dataset downloaded from the Cat Facts API to explore reading and writing data from / into kafka using zoe. In this guide, we will spin up a simple one node kafka cluster locally and then interact with it using zoe. If you want to follow along the instructions in this guide, you can find all the relevant files / datasets in the repository .","title":"A basic scenario"},{"location":"guides/simple/guide/#what-you-will-learn","text":"In this guide, you will learn the following aspects of zoe: Creating topics Listing topics Describing topics Writing json data into kafka Reading json data from kafka Using jmespath expressions to filter read data based on its content.","title":"What you will learn"},{"location":"guides/simple/guide/#prerequisites","text":"For this guide you will need: Zoe (install instructions are here ) Docker and docker-compose (that we will use to spin up Kafka)","title":"Prerequisites"},{"location":"guides/simple/guide/#prepare-the-environment","text":"Clone the repository : git clone https://github.com/adevinta/zoe.git Go to the directory: docs/guides/simple Spin up the kafka cluster: docker-compose up -d . Check all the containers are up: command docker-compose ps output Name Command State Ports ------------------------------------------------------------------------------------------------ broker /etc/confluent/docker/run Up 0.0.0.0:29092->29092/tcp, 0.0.0.0:9092->9092/tcp zookeeper /etc/confluent/docker/run Up 0.0.0.0:2181->2181/tcp, 2888/tcp, 3888/tcp","title":"Prepare the environment"},{"location":"guides/simple/guide/#configure-zoe","text":"Now, we need to configure zoe to make it aware of the cluster. Create a new file called default.yml inside zoe's config directory ( ~/.zoe/config by default) and fill it with the following content: ~/.zoe/config/default.yml clusters : default : props : bootstrap.servers : \"localhost:29092\" key.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" value.deserializer : \"org.apache.kafka.common.serialization.StringDeserializer\" key.serializer : \"org.apache.kafka.common.serialization.StringSerializer\" value.serializer : \"org.apache.kafka.common.serialization.ByteArraySerializer\" topics : input : name : input-topic runners : default : \"local\" The configuration above defines: A clusters section containing a single cluster aliased default . Clusters can be given any alias. Later on, when using zoe, we refer to a specific cluster by its alias using the --cluster <cluster alias> option. Otherwise, Zoe uses the cluster alias default if no cluster is specified using --cluster . The default cluster configuration defines: A props section containing the kafka properties that need to be supplied to the kafka clients when interacting with the cluster. A topics section containing a single topic aliased input that points to the real topic name input-topic . When reading to / from topics with zoe, we refer to a specific topic by its alias or real name. If we use an alias, zoe replaces it with the real name defined in the configuration. The runners section defines the local runner as the default one. This makes zoe by default runs the consumers / producers from the caller's machine. Zoe can use other runners like the kubernetes runner which runs the consumers / producers as kubernetes pods in a remote cluster. For more information about runners, checkout the dedicated section about runners . For more information on how to configure zoe, checkout the configuration section in the documentation . If you don't want to write this configuration by hand, you can copy the one already present in the repository by using the following command: command zoe config init --from git --url https://github.com/adevinta/zoe --dir docs/guides/simple/config You can check that zoe is now aware of the cluster by executing the following command: command zoe --silent -o table config clusters list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 cluster \u2502 brokers \u2502 registry \u2502 topics \u2502 groups \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 local \u2502 localhost:29092 \u2502 null \u2502 alias: \"input\" name: \"input-topic\" \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Now, you're ready to use zoe to interact with the local kafka cluster.","title":"Configure zoe"},{"location":"guides/simple/guide/#creating-topics","text":"The first step is to create our input topic by executing the following command: command zoe topics create input --partitions 5 --replication-factor 1 output 2020-06-27 17:53:23 INFO zoe: loading config from url : file:~/.zoe/config/default.yml 2020-06-27 17:53:23 INFO zoe: creating topic: input-topic 2020-06-27 17:53:24 INFO AppInfoParser: Kafka version: 5.5.0-ccs 2020-06-27 17:53:24 INFO AppInfoParser: Kafka commitId: 785a156634af5f7e 2020-06-27 17:53:24 INFO AppInfoParser: Kafka startTimeMs: 1593273204138 {\"done\":true} Notice that we have used the topic alias input and zoe replaced it with the real name of the topic input-topic defined in the configuration file. In zoe, you can use both aliases or real topic names when interacting with topics. Let's check the topic has been created (we are using the --silent option to avoid outputting logs): command zoe --silent -o table topics list output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 value \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \"input-topic\" \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 We can also describe the topic: command zoe --silent -o table topics describe input output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 topic \u2502 internal \u2502 partitions \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502 \u2502 0 \u2502 \u2502 \u2502 \u2502 1 \u2502 \u2502 input-topic \u2502 false \u2502 2 \u2502 \u2502 \u2502 \u2502 3 \u2502 \u2502 \u2502 \u2502 4 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Creating topics"},{"location":"guides/simple/guide/#reading-and-writing-data-into-the-topic","text":"Let's write some data into the topic. We will use the dataset provided in the repository that contain some data from cats facts API. The following command writes the json data contained in this file into the input topic (assuming you are in the docs/guides/simple directory): command zoe -o table topics produce --topic input --from-file data.json output 2020-06-27 18:03:17 INFO zoe: loading config from url : file:~/.zoe/config/default.yml 2020-06-27 18:03:17 INFO zoe: producing '212' records to topic 'input-topic' 2020-06-27 18:03:17 INFO AppInfoParser: Kafka version: 5.5.0-ccs 2020-06-27 18:03:17 INFO AppInfoParser: Kafka commitId: 785a156634af5f7e 2020-06-27 18:03:17 INFO AppInfoParser: Kafka startTimeMs: 1593273797705 2020-06-27 18:03:17 INFO Metadata: [Producer clientId=producer-1] Cluster ID: s7yIyv-2RSOWeNSaNSgAhQ 2020-06-27 18:03:17 INFO KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms. \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 produced \u2502 skipped \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 offset: 30 partition: 3 topic: \"input-topic\" timestamp: 1593273797924 \u2502 \u2502 \u2502 offset: 53 partition: 1 topic: \"input-topic\" timestamp: 1593273797937 \u2502 \u2502 \u2502 offset: 47 partition: 4 topic: \"input-topic\" timestamp: 1593273797937 \u2502 \u2502 \u2502 offset: 31 partition: 3 topic: \"input-topic\" timestamp: 1593273797937 \u2502 \u2502 \u2502 offset: 32 partition: 3 topic: \"input-topic\" timestamp: 1593273797937 \u2502 \u2502 \u2502 offset: 94 partition: 1 topic: \"input-topic\" timestamp: 1593273797951 \u2502 \u2502 | ... | ... | \u2502 offset: 95 partition: 1 topic: \"input-topic\" timestamp: 1593273797951 \u2502 \u2502 \u2502 offset: 96 partition: 1 topic: \"input-topic\" timestamp: 1593273797951 \u2502 \u2502 \u2502 offset: 85 partition: 2 topic: \"input-topic\" timestamp: 1593273797951 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 To read the data we have just inserted: command # read 5 messages from the last hour zoe --silent -o table topics consume input -n 5 --from 'PT1h' output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b1b411d841d9700146158d9 \u2502 The Egyptian Mau\u2019s name is derived from the Middle... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 5 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 59a60b8e6acf530020f3586e \u2502 Cat owners are 17% more likely to have a graduate ... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 5 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5b1b4055841d9700146158d3 \u2502 Scottish sailer Alexander Selkirk once survived fo... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 5a4d76916ef087002174c28b \u2502 A cat\u2019s nose pad is ridged with a unique pattern, ... \u2502 cat \u2502 _id: \"5a9ac18c7478810ea6c06381\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Alex\",\"last\":\"Wohlbruck\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a120aac31001185ed17 \u2502 A cat's brain is 90% similar to a human's \u2014 more s... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 You can know more about the different options that can be used with: zoe topics consume --help .","title":"Reading and writing data into the topic"},{"location":"guides/simple/guide/#filtering-events","text":"One of the most powerful feature of zoe is its ability to filter out events using criterias based on events content. In the following example, we are filtering out cat facts written by the user whose first name is Kasimir : command # filter out Kasimir's data zoe -o table topics consume input \\ -n 5 \\ --from 'PT1h' \\ --filter \"user.name.first == 'Kasimir'\" output \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 _id \u2502 text \u2502 type \u2502 user \u2502 upvotes \u2502 userUpvoted \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00a120aac31001185ed17 \u2502 A cat's brain is 90% similar to a human's \u2014 more s... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 4 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e007cc0aac31001185ecf5 \u2502 Cats are the most popular pet in the United States... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e008510aac31001185ecfe \u2502 In tigers and tabbies, the middle of the tongue is... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00bdb0aac31001185edfd \u2502 Cats can change their meow to manipulate a human. ... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 58e00ba00aac31001185edfa \u2502 When cats leave their poop uncovered, it is a sign... \u2502 cat \u2502 _id: \"58e007480aac31001185ecef\" \u2502 2 \u2502 null \u2502 \u2502 \u2502 \u2502 \u2502 name: {\"first\":\"Kasimir\",\"last\":\"Schulz\"} \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 The --filter option takes a jmespath expression and runs it against each event read from the topic. If this expression returns true for a given event, this event is returned. Otherwise, it is discarded. This feature is especially powerful when using remote runners as Zoe would run the consumers in the cloud (kubernetes or AWS lambdas) and only returns the relevant data to the caller's machine.","title":"Filtering events"},{"location":"guides/simple/guide/#clean-up-the-environment","text":"docker-compose down -v","title":"Clean up the environment"},{"location":"install/docker/","text":"Using Zoe with Docker We provide ready to use docker images for the CLI on each version release. This is a good alternative if your OS is not supported for the platform packages install or you don't want to install the JDK on your machine. The drawback however is a slightly higher startup latency. Zoe CLI can be launched within docker using the following command: docker run --rm -v $HOME /zoe-docker:/root/.zoe adevinta/zoe-cli:latest --help You can also use a release specific image: docker run --rm -v $HOME /zoe-docker:/root/.zoe adevinta/zoe-cli:0.23.0 --help Creating a launcher If you want to have a native CLI experience, you can wrap the docker run call in a bash script. Here is an example on linux based systems: ~/bin/zoe #!/usr/bin/env bash IMAGE = \"adevinta/zoe:latest\" # Use the host user DOCKER_RUN = \"docker container run -i --rm -v $HOME /zoe-docker:/root/.zoe\" # pass zoe specific environment variables [[ -n \" ${ ZOE_CLUSTER } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e ZOE_CLUSTER= ${ ZOE_CLUSTER } \" [[ -n \" ${ ZOE_ENV } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e ZOE_ENV= ${ ZOE_ENV } \" [[ -n \" ${ ZOE_CONFIG_DIR } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e ZOE_CONFIG_DIR= ${ ZOE_CONFIG_DIR } \" [[ -n \" ${ ZOE_STACKTRACE } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e ZOE_STACKTRACE= ${ ZOE_STACKTRACE } \" [[ -n \" ${ _ZOE_COMPLETE } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e _ZOE_COMPLETE= ${ _ZOE_COMPLETE } \" # pass AWS secrets if [[ -n \" ${ AWS_SECRET_ACCESS_KEY } \" ]] ; then DOCKER_RUN_ME = \" ${ DOCKER_RUN_ME } -e AWS_SECRET_ACCESS_KEY= ${ AWS_SECRET_ACCESS_KEY } \" DOCKER_RUN_ME = \" ${ DOCKER_RUN_ME } -e AWS_ACCESS_KEY_ID= ${ AWS_ACCESS_KEY_ID } \" DOCKER_RUN_ME = \" ${ DOCKER_RUN_ME } -e AWS_SESSION_TOKEN= ${ AWS_SESSION_TOKEN } \" fi exec ${ DOCKER_RUN } ${ IMAGE } \" $@ \" Once this file is created, make it executable: chmod +x ~/bin/zoe Make sure that the ~/bin folder is in your path. If not, you can add it by appending the following line in your ~/.bashrc (or ~/.zshrc ): PATH=\"$PATH:~/bin\" Restart your session. You should now be able to launch zoe by using: zoe --help","title":"Docker"},{"location":"install/docker/#using-zoe-with-docker","text":"We provide ready to use docker images for the CLI on each version release. This is a good alternative if your OS is not supported for the platform packages install or you don't want to install the JDK on your machine. The drawback however is a slightly higher startup latency. Zoe CLI can be launched within docker using the following command: docker run --rm -v $HOME /zoe-docker:/root/.zoe adevinta/zoe-cli:latest --help You can also use a release specific image: docker run --rm -v $HOME /zoe-docker:/root/.zoe adevinta/zoe-cli:0.23.0 --help","title":"Using Zoe with Docker"},{"location":"install/docker/#creating-a-launcher","text":"If you want to have a native CLI experience, you can wrap the docker run call in a bash script. Here is an example on linux based systems: ~/bin/zoe #!/usr/bin/env bash IMAGE = \"adevinta/zoe:latest\" # Use the host user DOCKER_RUN = \"docker container run -i --rm -v $HOME /zoe-docker:/root/.zoe\" # pass zoe specific environment variables [[ -n \" ${ ZOE_CLUSTER } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e ZOE_CLUSTER= ${ ZOE_CLUSTER } \" [[ -n \" ${ ZOE_ENV } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e ZOE_ENV= ${ ZOE_ENV } \" [[ -n \" ${ ZOE_CONFIG_DIR } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e ZOE_CONFIG_DIR= ${ ZOE_CONFIG_DIR } \" [[ -n \" ${ ZOE_STACKTRACE } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e ZOE_STACKTRACE= ${ ZOE_STACKTRACE } \" [[ -n \" ${ _ZOE_COMPLETE } \" ]] && DOCKER_RUN = \" ${ DOCKER_RUN } -e _ZOE_COMPLETE= ${ _ZOE_COMPLETE } \" # pass AWS secrets if [[ -n \" ${ AWS_SECRET_ACCESS_KEY } \" ]] ; then DOCKER_RUN_ME = \" ${ DOCKER_RUN_ME } -e AWS_SECRET_ACCESS_KEY= ${ AWS_SECRET_ACCESS_KEY } \" DOCKER_RUN_ME = \" ${ DOCKER_RUN_ME } -e AWS_ACCESS_KEY_ID= ${ AWS_ACCESS_KEY_ID } \" DOCKER_RUN_ME = \" ${ DOCKER_RUN_ME } -e AWS_SESSION_TOKEN= ${ AWS_SESSION_TOKEN } \" fi exec ${ DOCKER_RUN } ${ IMAGE } \" $@ \" Once this file is created, make it executable: chmod +x ~/bin/zoe Make sure that the ~/bin folder is in your path. If not, you can add it by appending the following line in your ~/.bashrc (or ~/.zshrc ): PATH=\"$PATH:~/bin\" Restart your session. You should now be able to launch zoe by using: zoe --help","title":"Creating a launcher"},{"location":"install/homebrew/","text":"Install with Homebrew You can install Zoe with Homebrew in both MacOs and linux environments. To install Zoe with Homebrew, you need the following prerequisites: Homebrew JDK11 or higher (You can install it either with sdkman or Homebrew itself). Once you have the above installed, you can proceed to the next step: # install brew install adevinta/homebrew-zoe/zoe # test zoe --help You are now ready to use zoe. Go to the Getting started section.","title":"Homebrew"},{"location":"install/homebrew/#install-with-homebrew","text":"You can install Zoe with Homebrew in both MacOs and linux environments. To install Zoe with Homebrew, you need the following prerequisites: Homebrew JDK11 or higher (You can install it either with sdkman or Homebrew itself). Once you have the above installed, you can proceed to the next step: # install brew install adevinta/homebrew-zoe/zoe # test zoe --help You are now ready to use zoe. Go to the Getting started section.","title":"Install with Homebrew"},{"location":"install/overview/","text":"Install Zoe CLI There are several ways to install zoe depending on your needs and the operation system you are using: Platform package install : Self contained platform packages ( .deb , .rpm , etc.) built using the new jpackage utility. These packages contain all the dependencies required including the java virtual machine and do not require the host machine to have its own JDK. This is the easiest way to install zoe (if your platform is supported). Homebrew : Zoe can also be installed using Homebrew on MacOs and Linux environments. Installed packages do not contain the JDK though, so the host machine is required to have a JDK 11 or higher. Manual tarball install : If none of the above options are available for you, Zoe provides tarballs ready to be used in all platforms (including Windows). The host machine is required to have a JDK 11 or higher. Docker : Zoe can also be used with docker. We provide ready to use images automatically built for each release.","title":"Overview"},{"location":"install/overview/#install-zoe-cli","text":"There are several ways to install zoe depending on your needs and the operation system you are using: Platform package install : Self contained platform packages ( .deb , .rpm , etc.) built using the new jpackage utility. These packages contain all the dependencies required including the java virtual machine and do not require the host machine to have its own JDK. This is the easiest way to install zoe (if your platform is supported). Homebrew : Zoe can also be installed using Homebrew on MacOs and Linux environments. Installed packages do not contain the JDK though, so the host machine is required to have a JDK 11 or higher. Manual tarball install : If none of the above options are available for you, Zoe provides tarballs ready to be used in all platforms (including Windows). The host machine is required to have a JDK 11 or higher. Docker : Zoe can also be used with docker. We provide ready to use images automatically built for each release.","title":"Install Zoe CLI"},{"location":"install/package/","text":"Platform package install (recommended) You can install zoe using one of the platform packages listed below. Only few platforms are supported for now but more will come in the future. The platform packages are self contained. They ship with their own version of the java virtual machine (thus the higher size of the package). The host machine does not need to have it's own java runtime. The platform packages are built with jpackage and JDK 14. Ubuntu / Debian Download the .deb package from the latest release page and install it using dpkg : ZOE_VERSION = '0.23.0' # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v ${ ZOE_VERSION } /zoe_ ${ ZOE_VERSION } -1_amd64.deb\" -o /tmp/zoe.deb sudo dpkg -i /tmp/zoe.deb Add the /opt/zoe/bin to your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin You can now initialize zoe configuration : zoe -v config init You are now ready to use zoe. Go to the Getting started section. Centos Install the latest .rpm package from the latest release page : ZOE_VERSION = 0 .23.0 # change it to the suitable version sudo rpm -i \"https://github.com/adevinta/zoe/releases/download/v ${ ZOE_VERSION } /zoe- ${ ZOE_VERSION } -1.x86_64.rpm\" Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin You can now initialize zoe configuration : zoe -v config init You are now ready to use zoe. Go to the Getting started section.","title":"Platform packages"},{"location":"install/package/#platform-package-install-recommended","text":"You can install zoe using one of the platform packages listed below. Only few platforms are supported for now but more will come in the future. The platform packages are self contained. They ship with their own version of the java virtual machine (thus the higher size of the package). The host machine does not need to have it's own java runtime. The platform packages are built with jpackage and JDK 14.","title":"Platform package install (recommended)"},{"location":"install/package/#ubuntu-debian","text":"Download the .deb package from the latest release page and install it using dpkg : ZOE_VERSION = '0.23.0' # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v ${ ZOE_VERSION } /zoe_ ${ ZOE_VERSION } -1_amd64.deb\" -o /tmp/zoe.deb sudo dpkg -i /tmp/zoe.deb Add the /opt/zoe/bin to your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin You can now initialize zoe configuration : zoe -v config init You are now ready to use zoe. Go to the Getting started section.","title":"Ubuntu / Debian"},{"location":"install/package/#centos","text":"Install the latest .rpm package from the latest release page : ZOE_VERSION = 0 .23.0 # change it to the suitable version sudo rpm -i \"https://github.com/adevinta/zoe/releases/download/v ${ ZOE_VERSION } /zoe- ${ ZOE_VERSION } -1.x86_64.rpm\" Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin You can now initialize zoe configuration : zoe -v config init You are now ready to use zoe. Go to the Getting started section.","title":"Centos"},{"location":"install/tarball/","text":"Manual tarball install (requires a JDK on the host machine) Java 11 or higher is required in order to install the runtime-less tarball packages. They only ship with the Zoe CLI jar. If you don't have java installed already, you can use sdkman for an easy install and version management of the JDK. If you don't want to install java you can try one of the platform packages provided in the previous section. Once java is installed, proceed with the following steps : Download the runtime-less zip or tar package of the zoe CLI from the latest release page and uncompress it into your home directory (or wherever you wish) ZOE_VERSION=0.23.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v ${ ZOE_VERSION } /zoe- ${ ZOE_VERSION } .tar.gz\" | tar -zx -C $HOME Add the $HOME/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:$HOME/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the guides section to start learning zoe.","title":"Tarball install"},{"location":"install/tarball/#manual-tarball-install-requires-a-jdk-on-the-host-machine","text":"Java 11 or higher is required in order to install the runtime-less tarball packages. They only ship with the Zoe CLI jar. If you don't have java installed already, you can use sdkman for an easy install and version management of the JDK. If you don't want to install java you can try one of the platform packages provided in the previous section. Once java is installed, proceed with the following steps : Download the runtime-less zip or tar package of the zoe CLI from the latest release page and uncompress it into your home directory (or wherever you wish) ZOE_VERSION=0.23.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v ${ ZOE_VERSION } /zoe- ${ ZOE_VERSION } .tar.gz\" | tar -zx -C $HOME Add the $HOME/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:$HOME/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the guides section to start learning zoe.","title":"Manual tarball install (requires a JDK on the host machine)"}]}