{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Zoe Documentation is in progress","title":"Zoe"},{"location":"#zoe","text":"Documentation is in progress","title":"Zoe"},{"location":"install/","text":"Install Zoe CLI Platform package install (Experimental - does not require an already installed JDK) You can install zoe using one of the platform packages listed below. Only few platforms are supported for now but more will come in the future. The platform packages are self contained. They ship with their own version of the java virtual machine (thus the higher size of the package). The host machine does not need to have it's own java runtime. The platform packages are built with jpackage and JDK 14. Ubuntu / Debian Download the .deb package of the zoe CLI from the latest release page and install it using dpkg : ZOE_VERSION=0.3.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe_${ZOE_VERSION}-1_amd64.deb\" -o /tmp/zoe.deb sudo dpkg -i /tmp/zoe.deb Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe. Centos Download the .rpm package of the zoe CLI from the latest release page and install it using dpkg : ZOE_VERSION=0.3.0 # change it to the suitable version sudo rpm -i \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe-${ZOE_VERSION}-1.x86_64.rpm\" Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe. Manual tarball install (requires a JDK on the host machine) Java 11 or higher is required in order to install the runtime-less tarball packages. They only ship with the Zoe CLI jar. If you don't have java installed already, you can use sdkman for an easy install and version management of the JDK. If you don't want to install java you can try one of the platform packages provided above. Once java is installed, proceed with the following steps : Download the runtime-less zip or tar package of the zoe CLI from the latest release page and uncompress it into your home directory (or wherever you wish) ZOE_VERSION=0.3.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe-${ZOE_VERSION}.tar.gz\" | tar -zx -C $HOME Add the $HOME/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:$HOME/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Install Zoe CLI"},{"location":"install/#install-zoe-cli","text":"","title":"Install Zoe CLI"},{"location":"install/#platform-package-install-experimental-does-not-require-an-already-installed-jdk","text":"You can install zoe using one of the platform packages listed below. Only few platforms are supported for now but more will come in the future. The platform packages are self contained. They ship with their own version of the java virtual machine (thus the higher size of the package). The host machine does not need to have it's own java runtime. The platform packages are built with jpackage and JDK 14.","title":"Platform package install (Experimental - does not require an already installed JDK)"},{"location":"install/#ubuntu-debian","text":"Download the .deb package of the zoe CLI from the latest release page and install it using dpkg : ZOE_VERSION=0.3.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe_${ZOE_VERSION}-1_amd64.deb\" -o /tmp/zoe.deb sudo dpkg -i /tmp/zoe.deb Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Ubuntu / Debian"},{"location":"install/#centos","text":"Download the .rpm package of the zoe CLI from the latest release page and install it using dpkg : ZOE_VERSION=0.3.0 # change it to the suitable version sudo rpm -i \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe-${ZOE_VERSION}-1.x86_64.rpm\" Add the /opt/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:/opt/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Centos"},{"location":"install/#manual-tarball-install-requires-a-jdk-on-the-host-machine","text":"Java 11 or higher is required in order to install the runtime-less tarball packages. They only ship with the Zoe CLI jar. If you don't have java installed already, you can use sdkman for an easy install and version management of the JDK. If you don't want to install java you can try one of the platform packages provided above. Once java is installed, proceed with the following steps : Download the runtime-less zip or tar package of the zoe CLI from the latest release page and uncompress it into your home directory (or wherever you wish) ZOE_VERSION=0.3.0 # change it to the suitable version curl -L \"https://github.com/adevinta/zoe/releases/download/v${ZOE_VERSION}/zoe-${ZOE_VERSION}.tar.gz\" | tar -zx -C $HOME Add the $HOME/zoe/bin into your path by appending the following line in your .bashrc (or .zshrc ) : PATH=$PATH:$HOME/zoe/bin Init zoe configuration : zoe config init You are now ready to use zoe. Go to the ./tutorials folder to start learning zoe.","title":"Manual tarball install (requires a JDK on the host machine)"}]}